Terminals unused in grammar

   RESERVED


State 51 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 122 conflicts: 9 reduce/reduce
State 188 conflicts: 1 shift/reduce
State 253 conflicts: 1 shift/reduce
State 254 conflicts: 1 shift/reduce
State 255 conflicts: 1 shift/reduce
State 256 conflicts: 1 shift/reduce
State 303 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Literal: NULLTOKEN
    2        | TRUETOKEN
    3        | FALSETOKEN
    4        | NUMBER
    5        | STRING
    6        | '/'
    7        | DIVEQUAL

    8 PrimaryExpr: THIS
    9            | IDENT
   10            | Literal
   11            | ArrayLiteral
   12            | '(' Expr ')'
   13            | '{' '}'
   14            | '{' PropertyNameAndValueList '}'

   15 ArrayLiteral: '[' ElisionOpt ']'
   16             | '[' ElementList ']'
   17             | '[' ElementList ',' ElisionOpt ']'

   18 ElementList: ElisionOpt AssignmentExpr
   19            | ElementList ',' ElisionOpt AssignmentExpr

   20 ElisionOpt: /* empty */
   21           | Elision

   22 Elision: ','
   23        | Elision ','

   24 PropertyNameAndValueList: PropertyName ':' AssignmentExpr
   25                         | PropertyNameAndValueList ',' PropertyName ':' AssignmentExpr

   26 PropertyName: IDENT
   27             | STRING
   28             | NUMBER

   29 MemberExpr: PrimaryExpr
   30           | FunctionExpr
   31           | MemberExpr '[' Expr ']'
   32           | MemberExpr '.' IDENT
   33           | NEW MemberExpr Arguments

   34 NewExpr: MemberExpr
   35        | NEW NewExpr

   36 CallExpr: MemberExpr Arguments
   37         | CallExpr Arguments
   38         | CallExpr '[' Expr ']'
   39         | CallExpr '.' IDENT

   40 Arguments: '(' ')'
   41          | '(' ArgumentList ')'

   42 ArgumentList: AssignmentExpr
   43             | ArgumentList ',' AssignmentExpr

   44 LeftHandSideExpr: NewExpr
   45                 | CallExpr

   46 PostfixExpr: LeftHandSideExpr
   47            | LeftHandSideExpr PLUSPLUS
   48            | LeftHandSideExpr MINUSMINUS

   49 UnaryExpr: PostfixExpr
   50          | DELETE UnaryExpr
   51          | VOID UnaryExpr
   52          | TYPEOF UnaryExpr
   53          | PLUSPLUS UnaryExpr
   54          | AUTOPLUSPLUS UnaryExpr
   55          | MINUSMINUS UnaryExpr
   56          | AUTOMINUSMINUS UnaryExpr
   57          | '+' UnaryExpr
   58          | '-' UnaryExpr
   59          | '~' UnaryExpr
   60          | '!' UnaryExpr

   61 MultiplicativeExpr: UnaryExpr
   62                   | MultiplicativeExpr '*' UnaryExpr
   63                   | MultiplicativeExpr '/' UnaryExpr
   64                   | MultiplicativeExpr '%' UnaryExpr

   65 AdditiveExpr: MultiplicativeExpr
   66             | AdditiveExpr '+' MultiplicativeExpr
   67             | AdditiveExpr '-' MultiplicativeExpr

   68 ShiftExpr: AdditiveExpr
   69          | ShiftExpr LSHIFT AdditiveExpr
   70          | ShiftExpr RSHIFT AdditiveExpr
   71          | ShiftExpr URSHIFT AdditiveExpr

   72 RelationalExpr: ShiftExpr
   73               | RelationalExpr '<' ShiftExpr
   74               | RelationalExpr '>' ShiftExpr
   75               | RelationalExpr LE ShiftExpr
   76               | RelationalExpr GE ShiftExpr
   77               | RelationalExpr INSTANCEOF ShiftExpr
   78               | RelationalExpr IN ShiftExpr

   79 EqualityExpr: RelationalExpr
   80             | EqualityExpr EQEQ RelationalExpr
   81             | EqualityExpr NE RelationalExpr
   82             | EqualityExpr STREQ RelationalExpr
   83             | EqualityExpr STRNEQ RelationalExpr

   84 BitwiseANDExpr: EqualityExpr
   85               | BitwiseANDExpr '&' EqualityExpr

   86 BitwiseXORExpr: BitwiseANDExpr
   87               | BitwiseXORExpr '^' BitwiseANDExpr

   88 BitwiseORExpr: BitwiseXORExpr
   89              | BitwiseORExpr '|' BitwiseXORExpr

   90 LogicalANDExpr: BitwiseORExpr
   91               | LogicalANDExpr AND BitwiseORExpr

   92 LogicalORExpr: LogicalANDExpr
   93              | LogicalORExpr OR LogicalANDExpr

   94 ConditionalExpr: LogicalORExpr
   95                | LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr

   96 AssignmentExpr: ConditionalExpr
   97               | LeftHandSideExpr AssignmentOperator AssignmentExpr

   98 AssignmentOperator: '='
   99                   | PLUSEQUAL
  100                   | MINUSEQUAL
  101                   | MULTEQUAL
  102                   | DIVEQUAL
  103                   | LSHIFTEQUAL
  104                   | RSHIFTEQUAL
  105                   | URSHIFTEQUAL
  106                   | ANDEQUAL
  107                   | XOREQUAL
  108                   | OREQUAL
  109                   | MODEQUAL

  110 Expr: AssignmentExpr
  111     | Expr ',' AssignmentExpr

  112 Statement: Block
  113          | VariableStatement
  114          | EmptyStatement
  115          | ExprStatement
  116          | IfStatement
  117          | IterationStatement
  118          | ContinueStatement
  119          | BreakStatement
  120          | ReturnStatement
  121          | WithStatement
  122          | SwitchStatement
  123          | LabelledStatement
  124          | ThrowStatement
  125          | TryStatement

  126 Block: '{' '}'
  127      | '{' SourceElements '}'

  128 StatementList: Statement
  129              | StatementList Statement

  130 VariableStatement: VAR VariableDeclarationList ';'
  131                  | VAR VariableDeclarationList error

  132 VariableDeclarationList: VariableDeclaration
  133                        | VariableDeclarationList ',' VariableDeclaration

  134 VariableDeclaration: IDENT
  135                    | IDENT Initializer

  136 Initializer: '=' AssignmentExpr

  137 EmptyStatement: ';'

  138 ExprStatement: Expr ';'
  139              | Expr error

  140 IfStatement: IF '(' Expr ')' Statement
  141            | IF '(' Expr ')' Statement ELSE Statement

  142 IterationStatement: DO Statement WHILE '(' Expr ')'
  143                   | WHILE '(' Expr ')' Statement
  144                   | FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | FOR '(' VAR IDENT Initializer IN Expr ')' Statement

  149 ExprOpt: /* empty */
  150        | Expr

  151 ContinueStatement: CONTINUE ';'
  152                  | CONTINUE error
  153                  | CONTINUE IDENT ';'
  154                  | CONTINUE IDENT error

  155 BreakStatement: BREAK ';'
  156               | BREAK error
  157               | BREAK IDENT ';'
  158               | BREAK IDENT error

  159 ReturnStatement: RETURN ';'
  160                | RETURN error
  161                | RETURN Expr ';'
  162                | RETURN Expr error

  163 WithStatement: WITH '(' Expr ')' Statement

  164 SwitchStatement: SWITCH '(' Expr ')' CaseBlock

  165 CaseBlock: '{' CaseClausesOpt '}'
  166          | '{' CaseClausesOpt DefaultClause CaseClausesOpt '}'

  167 CaseClausesOpt: /* empty */
  168               | CaseClauses

  169 CaseClauses: CaseClause
  170            | CaseClauses CaseClause

  171 CaseClause: CASE Expr ':'
  172           | CASE Expr ':' StatementList

  173 DefaultClause: DEFAULT ':'
  174              | DEFAULT ':' StatementList

  175 LabelledStatement: IDENT ':' Statement

  176 ThrowStatement: THROW Expr ';'

  177 TryStatement: TRY Block Catch
  178             | TRY Block Finally
  179             | TRY Block Catch Finally

  180 Catch: CATCH '(' IDENT ')' Block

  181 Finally: FINALLY Block

  182 FunctionDeclaration: FUNCTION IDENT '(' ')' FunctionBody
  183                    | FUNCTION IDENT '(' FormalParameterList ')' FunctionBody

  184 FunctionExpr: FUNCTION '(' ')' FunctionBody
  185             | FUNCTION '(' FormalParameterList ')' FunctionBody

  186 FormalParameterList: IDENT
  187                    | FormalParameterList ',' IDENT

  188 FunctionBody: '{' '}'
  189             | '{' SourceElements '}'

  190 Program: /* empty */
  191        | SourceElements

  192 SourceElements: SourceElement
  193               | SourceElements SourceElement

  194 SourceElement: Statement
  195              | FunctionDeclaration


Terminals, with rules where they appear

$end (0) 0
'!' (33) 60
'%' (37) 64
'&' (38) 85
'(' (40) 12 40 41 140 141 142 143 144 145 146 147 148 163 164 180 182
    183 184 185
')' (41) 12 40 41 140 141 142 143 144 145 146 147 148 163 164 180 182
    183 184 185
'*' (42) 62
'+' (43) 57 66
',' (44) 17 19 22 23 25 43 111 133 187
'-' (45) 58 67
'.' (46) 32 39
'/' (47) 6 63
':' (58) 24 25 95 171 172 173 174 175
';' (59) 130 137 138 144 145 151 153 155 157 159 161 176
'<' (60) 73
'=' (61) 98 136
'>' (62) 74
'?' (63) 95
'[' (91) 15 16 17 31 38
']' (93) 15 16 17 31 38
'^' (94) 87
'{' (123) 13 14 126 127 165 166 188 189
'|' (124) 89
'}' (125) 13 14 126 127 165 166 188 189
'~' (126) 59
error (256) 131 139 152 154 156 158 160 162
NULLTOKEN (258) 1
TRUETOKEN (259) 2
FALSETOKEN (260) 3
BREAK (261) 155 156 157 158
CASE (262) 171 172
DEFAULT (263) 173 174
FOR (264) 144 145 146 147 148
NEW (265) 33 35
VAR (266) 130 131 145 147 148
CONTINUE (267) 151 152 153 154
FUNCTION (268) 182 183 184 185
RETURN (269) 159 160 161 162
VOID (270) 51
DELETE (271) 50
IF (272) 140 141
THIS (273) 8
DO (274) 142
WHILE (275) 142 143
ELSE (276) 141
IN (277) 78 146 147 148
INSTANCEOF (278) 77
TYPEOF (279) 52
SWITCH (280) 164
WITH (281) 163
RESERVED (282)
THROW (283) 176
TRY (284) 177 178 179
CATCH (285) 180
FINALLY (286) 181
EQEQ (287) 80
NE (288) 81
STREQ (289) 82
STRNEQ (290) 83
LE (291) 75
GE (292) 76
OR (293) 93
AND (294) 91
PLUSPLUS (295) 47 53
MINUSMINUS (296) 48 55
LSHIFT (297) 69
RSHIFT (298) 70
URSHIFT (299) 71
PLUSEQUAL (300) 99
MINUSEQUAL (301) 100
MULTEQUAL (302) 101
DIVEQUAL (303) 7 102
LSHIFTEQUAL (304) 103
RSHIFTEQUAL (305) 104
URSHIFTEQUAL (306) 105
ANDEQUAL (307) 106
MODEQUAL (308) 109
XOREQUAL (309) 107
OREQUAL (310) 108
NUMBER (311) 4 28
STRING (312) 5 27
IDENT (313) 9 26 32 39 134 135 147 148 153 154 157 158 175 180 182
    183 186 187
AUTOPLUSPLUS (314) 54
AUTOMINUSMINUS (315) 56


Nonterminals, with rules where they appear

$accept (85)
    on left: 0
Literal (86)
    on left: 1 2 3 4 5 6 7, on right: 10
PrimaryExpr (87)
    on left: 8 9 10 11 12 13 14, on right: 29
ArrayLiteral (88)
    on left: 15 16 17, on right: 11
ElementList (89)
    on left: 18 19, on right: 16 17 19
ElisionOpt (90)
    on left: 20 21, on right: 15 17 18 19
Elision (91)
    on left: 22 23, on right: 21 23
PropertyNameAndValueList (92)
    on left: 24 25, on right: 14 25
PropertyName (93)
    on left: 26 27 28, on right: 24 25
MemberExpr (94)
    on left: 29 30 31 32 33, on right: 31 32 33 34 36
NewExpr (95)
    on left: 34 35, on right: 35 44
CallExpr (96)
    on left: 36 37 38 39, on right: 37 38 39 45
Arguments (97)
    on left: 40 41, on right: 33 36 37
ArgumentList (98)
    on left: 42 43, on right: 41 43
LeftHandSideExpr (99)
    on left: 44 45, on right: 46 47 48 97 146
PostfixExpr (100)
    on left: 46 47 48, on right: 49
UnaryExpr (101)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60, on right: 50 51 52
    53 54 55 56 57 58 59 60 61 62 63 64
MultiplicativeExpr (102)
    on left: 61 62 63 64, on right: 62 63 64 65 66 67
AdditiveExpr (103)
    on left: 65 66 67, on right: 66 67 68 69 70 71
ShiftExpr (104)
    on left: 68 69 70 71, on right: 69 70 71 72 73 74 75 76 77 78
RelationalExpr (105)
    on left: 72 73 74 75 76 77 78, on right: 73 74 75 76 77 78 79 80
    81 82 83
EqualityExpr (106)
    on left: 79 80 81 82 83, on right: 80 81 82 83 84 85
BitwiseANDExpr (107)
    on left: 84 85, on right: 85 86 87
BitwiseXORExpr (108)
    on left: 86 87, on right: 87 88 89
BitwiseORExpr (109)
    on left: 88 89, on right: 89 90 91
LogicalANDExpr (110)
    on left: 90 91, on right: 91 92 93
LogicalORExpr (111)
    on left: 92 93, on right: 93 94 95
ConditionalExpr (112)
    on left: 94 95, on right: 96
AssignmentExpr (113)
    on left: 96 97, on right: 18 19 24 25 42 43 95 97 110 111 136
AssignmentOperator (114)
    on left: 98 99 100 101 102 103 104 105 106 107 108 109, on right:
    97
Expr (115)
    on left: 110 111, on right: 12 31 38 111 138 139 140 141 142 143
    146 147 148 150 161 162 163 164 171 172 176
Statement (116)
    on left: 112 113 114 115 116 117 118 119 120 121 122 123 124 125,
    on right: 128 129 140 141 142 143 144 145 146 147 148 163 175 194
Block (117)
    on left: 126 127, on right: 112 177 178 179 180 181
StatementList (118)
    on left: 128 129, on right: 129 172 174
VariableStatement (119)
    on left: 130 131, on right: 113
VariableDeclarationList (120)
    on left: 132 133, on right: 130 131 133 145
VariableDeclaration (121)
    on left: 134 135, on right: 132 133
Initializer (122)
    on left: 136, on right: 135 148
EmptyStatement (123)
    on left: 137, on right: 114
ExprStatement (124)
    on left: 138 139, on right: 115
IfStatement (125)
    on left: 140 141, on right: 116
IterationStatement (126)
    on left: 142 143 144 145 146 147 148, on right: 117
ExprOpt (127)
    on left: 149 150, on right: 144 145
ContinueStatement (128)
    on left: 151 152 153 154, on right: 118
BreakStatement (129)
    on left: 155 156 157 158, on right: 119
ReturnStatement (130)
    on left: 159 160 161 162, on right: 120
WithStatement (131)
    on left: 163, on right: 121
SwitchStatement (132)
    on left: 164, on right: 122
CaseBlock (133)
    on left: 165 166, on right: 164
CaseClausesOpt (134)
    on left: 167 168, on right: 165 166
CaseClauses (135)
    on left: 169 170, on right: 168 170
CaseClause (136)
    on left: 171 172, on right: 169 170
DefaultClause (137)
    on left: 173 174, on right: 166
LabelledStatement (138)
    on left: 175, on right: 123
ThrowStatement (139)
    on left: 176, on right: 124
TryStatement (140)
    on left: 177 178 179, on right: 125
Catch (141)
    on left: 180, on right: 177 179
Finally (142)
    on left: 181, on right: 178 179
FunctionDeclaration (143)
    on left: 182 183, on right: 195
FunctionExpr (144)
    on left: 184 185, on right: 30
FormalParameterList (145)
    on left: 186 187, on right: 183 185 187
FunctionBody (146)
    on left: 188 189, on right: 182 183 184 185
Program (147)
    on left: 190 191, on right: 0
SourceElements (148)
    on left: 192 193, on right: 127 189 191 193
SourceElement (149)
    on left: 194 195, on right: 192 193


state 0

    0 $accept: . Program $end
    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  182 FunctionDeclaration: . FUNCTION IDENT '(' ')' FunctionBody
  183                    | . FUNCTION IDENT '(' FormalParameterList ')' FunctionBody
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody
  190 Program: .  [$end]
  191        | . SourceElements
  192 SourceElements: . SourceElement
  193               | . SourceElements SourceElement
  194 SourceElement: . Statement
  195              | . FunctionDeclaration

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 9
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    $default  reduce using rule 190 (Program)

    Literal              go to state 39
    PrimaryExpr          go to state 40
    ArrayLiteral         go to state 41
    MemberExpr           go to state 42
    NewExpr              go to state 43
    CallExpr             go to state 44
    LeftHandSideExpr     go to state 45
    PostfixExpr          go to state 46
    UnaryExpr            go to state 47
    MultiplicativeExpr   go to state 48
    AdditiveExpr         go to state 49
    ShiftExpr            go to state 50
    RelationalExpr       go to state 51
    EqualityExpr         go to state 52
    BitwiseANDExpr       go to state 53
    BitwiseXORExpr       go to state 54
    BitwiseORExpr        go to state 55
    LogicalANDExpr       go to state 56
    LogicalORExpr        go to state 57
    ConditionalExpr      go to state 58
    AssignmentExpr       go to state 59
    Expr                 go to state 60
    Statement            go to state 61
    Block                go to state 62
    VariableStatement    go to state 63
    EmptyStatement       go to state 64
    ExprStatement        go to state 65
    IfStatement          go to state 66
    IterationStatement   go to state 67
    ContinueStatement    go to state 68
    BreakStatement       go to state 69
    ReturnStatement      go to state 70
    WithStatement        go to state 71
    SwitchStatement      go to state 72
    LabelledStatement    go to state 73
    ThrowStatement       go to state 74
    TryStatement         go to state 75
    FunctionDeclaration  go to state 76
    FunctionExpr         go to state 77
    Program              go to state 78
    SourceElements       go to state 79
    SourceElement        go to state 80


state 1

    1 Literal: NULLTOKEN .

    $default  reduce using rule 1 (Literal)


state 2

    2 Literal: TRUETOKEN .

    $default  reduce using rule 2 (Literal)


state 3

    3 Literal: FALSETOKEN .

    $default  reduce using rule 3 (Literal)


state 4

  155 BreakStatement: BREAK . ';'
  156               | BREAK . error
  157               | BREAK . IDENT ';'
  158               | BREAK . IDENT error

    error  shift, and go to state 81
    IDENT  shift, and go to state 82
    ';'    shift, and go to state 83


state 5

  144 IterationStatement: FOR . '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | FOR . '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | FOR . '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | FOR . '(' VAR IDENT IN Expr ')' Statement
  148                   | FOR . '(' VAR IDENT Initializer IN Expr ')' Statement

    '('  shift, and go to state 84


state 6

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   33           | NEW . MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   35        | NEW . NewExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN   shift, and go to state 1
    TRUETOKEN   shift, and go to state 2
    FALSETOKEN  shift, and go to state 3
    NEW         shift, and go to state 6
    FUNCTION    shift, and go to state 85
    THIS        shift, and go to state 14
    DIVEQUAL    shift, and go to state 24
    NUMBER      shift, and go to state 25
    STRING      shift, and go to state 26
    IDENT       shift, and go to state 86
    '/'         shift, and go to state 30
    '('         shift, and go to state 31
    '{'         shift, and go to state 87
    '['         shift, and go to state 33

    Literal       go to state 39
    PrimaryExpr   go to state 40
    ArrayLiteral  go to state 41
    MemberExpr    go to state 88
    NewExpr       go to state 89
    FunctionExpr  go to state 77


state 7

  130 VariableStatement: VAR . VariableDeclarationList ';'
  131                  | VAR . VariableDeclarationList error
  132 VariableDeclarationList: . VariableDeclaration
  133                        | . VariableDeclarationList ',' VariableDeclaration
  134 VariableDeclaration: . IDENT
  135                    | . IDENT Initializer

    IDENT  shift, and go to state 90

    VariableDeclarationList  go to state 91
    VariableDeclaration      go to state 92


state 8

  151 ContinueStatement: CONTINUE . ';'
  152                  | CONTINUE . error
  153                  | CONTINUE . IDENT ';'
  154                  | CONTINUE . IDENT error

    error  shift, and go to state 93
    IDENT  shift, and go to state 94
    ';'    shift, and go to state 95


state 9

  182 FunctionDeclaration: FUNCTION . IDENT '(' ')' FunctionBody
  183                    | FUNCTION . IDENT '(' FormalParameterList ')' FunctionBody
  184 FunctionExpr: FUNCTION . '(' ')' FunctionBody
  185             | FUNCTION . '(' FormalParameterList ')' FunctionBody

    IDENT  shift, and go to state 96
    '('    shift, and go to state 97


state 10

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  159 ReturnStatement: RETURN . ';'
  160                | RETURN . error
  161                | RETURN . Expr ';'
  162                | RETURN . Expr error
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    error           shift, and go to state 98
    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 99

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 100
    FunctionExpr        go to state 77


state 11

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   51          | VOID . UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 102
    FunctionExpr      go to state 77


state 12

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   50          | DELETE . UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 103
    FunctionExpr      go to state 77


state 13

  140 IfStatement: IF . '(' Expr ')' Statement
  141            | IF . '(' Expr ')' Statement ELSE Statement

    '('  shift, and go to state 104


state 14

    8 PrimaryExpr: THIS .

    $default  reduce using rule 8 (PrimaryExpr)


state 15

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  142                   | DO . Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 105
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 16

  143 IterationStatement: WHILE . '(' Expr ')' Statement

    '('  shift, and go to state 106


state 17

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   52          | TYPEOF . UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 107
    FunctionExpr      go to state 77


state 18

  164 SwitchStatement: SWITCH . '(' Expr ')' CaseBlock

    '('  shift, and go to state 108


state 19

  163 WithStatement: WITH . '(' Expr ')' Statement

    '('  shift, and go to state 109


state 20

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  176 ThrowStatement: THROW . Expr ';'
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 110
    FunctionExpr        go to state 77


state 21

  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  177 TryStatement: TRY . Block Catch
  178             | TRY . Block Finally
  179             | TRY . Block Catch Finally

    '{'  shift, and go to state 111

    Block  go to state 112


state 22

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   53          | PLUSPLUS . UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 113
    FunctionExpr      go to state 77


state 23

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   55          | MINUSMINUS . UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 114
    FunctionExpr      go to state 77


state 24

    7 Literal: DIVEQUAL .

    $default  reduce using rule 7 (Literal)


state 25

    4 Literal: NUMBER .

    $default  reduce using rule 4 (Literal)


state 26

    5 Literal: STRING .

    $default  reduce using rule 5 (Literal)


state 27

    9 PrimaryExpr: IDENT .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, PLUSPLUS, MINUSMINUS, LSHIFT, RSHIFT, URSHIFT, PLUSEQUAL, MINUSEQUAL, MULTEQUAL, DIVEQUAL, LSHIFTEQUAL, RSHIFTEQUAL, URSHIFTEQUAL, ANDEQUAL, MODEQUAL, XOREQUAL, OREQUAL, '/', '(', '[', ',', '.', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', '=', ';']
  175 LabelledStatement: IDENT . ':' Statement

    ':'  shift, and go to state 115

    $default  reduce using rule 9 (PrimaryExpr)


state 28

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   54          | AUTOPLUSPLUS . UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 116
    FunctionExpr      go to state 77


state 29

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   56          | AUTOMINUSMINUS . UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 117
    FunctionExpr      go to state 77


state 30

    6 Literal: '/' .

    $default  reduce using rule 6 (Literal)


state 31

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   12            | '(' . Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 118
    FunctionExpr        go to state 77


state 32

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   13            | '{' . '}'
   14            | . '{' PropertyNameAndValueList '}'
   14            | '{' . PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   24 PropertyNameAndValueList: . PropertyName ':' AssignmentExpr
   25                         | . PropertyNameAndValueList ',' PropertyName ':' AssignmentExpr
   26 PropertyName: . IDENT
   27             | . STRING
   28             | . NUMBER
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  126      | '{' . '}'
  127      | . '{' SourceElements '}'
  127      | '{' . SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  182 FunctionDeclaration: . FUNCTION IDENT '(' ')' FunctionBody
  183                    | . FUNCTION IDENT '(' FormalParameterList ')' FunctionBody
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody
  192 SourceElements: . SourceElement
  193               | . SourceElements SourceElement
  194 SourceElement: . Statement
  195              | . FunctionDeclaration

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 9
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 119
    STRING          shift, and go to state 120
    IDENT           shift, and go to state 121
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '}'             shift, and go to state 122
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal                   go to state 39
    PrimaryExpr               go to state 40
    ArrayLiteral              go to state 41
    PropertyNameAndValueList  go to state 123
    PropertyName              go to state 124
    MemberExpr                go to state 42
    NewExpr                   go to state 43
    CallExpr                  go to state 44
    LeftHandSideExpr          go to state 45
    PostfixExpr               go to state 46
    UnaryExpr                 go to state 47
    MultiplicativeExpr        go to state 48
    AdditiveExpr              go to state 49
    ShiftExpr                 go to state 50
    RelationalExpr            go to state 51
    EqualityExpr              go to state 52
    BitwiseANDExpr            go to state 53
    BitwiseXORExpr            go to state 54
    BitwiseORExpr             go to state 55
    LogicalANDExpr            go to state 56
    LogicalORExpr             go to state 57
    ConditionalExpr           go to state 58
    AssignmentExpr            go to state 59
    Expr                      go to state 60
    Statement                 go to state 61
    Block                     go to state 62
    VariableStatement         go to state 63
    EmptyStatement            go to state 64
    ExprStatement             go to state 65
    IfStatement               go to state 66
    IterationStatement        go to state 67
    ContinueStatement         go to state 68
    BreakStatement            go to state 69
    ReturnStatement           go to state 70
    WithStatement             go to state 71
    SwitchStatement           go to state 72
    LabelledStatement         go to state 73
    ThrowStatement            go to state 74
    TryStatement              go to state 75
    FunctionDeclaration       go to state 76
    FunctionExpr              go to state 77
    SourceElements            go to state 125
    SourceElement             go to state 80


state 33

   15 ArrayLiteral: '[' . ElisionOpt ']'
   16             | '[' . ElementList ']'
   17             | '[' . ElementList ',' ElisionOpt ']'
   18 ElementList: . ElisionOpt AssignmentExpr
   19            | . ElementList ',' ElisionOpt AssignmentExpr
   20 ElisionOpt: .  [NULLTOKEN, TRUETOKEN, FALSETOKEN, NEW, FUNCTION, VOID, DELETE, THIS, TYPEOF, PLUSPLUS, MINUSMINUS, DIVEQUAL, NUMBER, STRING, IDENT, AUTOPLUSPLUS, AUTOMINUSMINUS, '/', '(', '{', '[', ']', '+', '-', '~', '!']
   21           | . Elision
   22 Elision: . ','
   23        | . Elision ','

    ','  shift, and go to state 126

    $default  reduce using rule 20 (ElisionOpt)

    ElementList  go to state 127
    ElisionOpt   go to state 128
    Elision      go to state 129


state 34

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   57          | '+' . UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 130
    FunctionExpr      go to state 77


state 35

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   58          | '-' . UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 131
    FunctionExpr      go to state 77


state 36

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   59          | '~' . UnaryExpr
   60          | . '!' UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 132
    FunctionExpr      go to state 77


state 37

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   60          | '!' . UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 133
    FunctionExpr      go to state 77


state 38

  137 EmptyStatement: ';' .

    $default  reduce using rule 137 (EmptyStatement)


state 39

   10 PrimaryExpr: Literal .

    $default  reduce using rule 10 (PrimaryExpr)


state 40

   29 MemberExpr: PrimaryExpr .

    $default  reduce using rule 29 (MemberExpr)


state 41

   11 PrimaryExpr: ArrayLiteral .

    $default  reduce using rule 11 (PrimaryExpr)


state 42

   31 MemberExpr: MemberExpr . '[' Expr ']'
   32           | MemberExpr . '.' IDENT
   34 NewExpr: MemberExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, PLUSPLUS, MINUSMINUS, LSHIFT, RSHIFT, URSHIFT, PLUSEQUAL, MINUSEQUAL, MULTEQUAL, DIVEQUAL, LSHIFTEQUAL, RSHIFTEQUAL, URSHIFTEQUAL, ANDEQUAL, MODEQUAL, XOREQUAL, OREQUAL, '/', ')', '}', ']', ',', ':', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', '=', ';']
   36 CallExpr: MemberExpr . Arguments
   40 Arguments: . '(' ')'
   41          | . '(' ArgumentList ')'

    '('  shift, and go to state 134
    '['  shift, and go to state 135
    '.'  shift, and go to state 136

    $default  reduce using rule 34 (NewExpr)

    Arguments  go to state 137


state 43

   44 LeftHandSideExpr: NewExpr .

    $default  reduce using rule 44 (LeftHandSideExpr)


state 44

   37 CallExpr: CallExpr . Arguments
   38         | CallExpr . '[' Expr ']'
   39         | CallExpr . '.' IDENT
   40 Arguments: . '(' ')'
   41          | . '(' ArgumentList ')'
   45 LeftHandSideExpr: CallExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, PLUSPLUS, MINUSMINUS, LSHIFT, RSHIFT, URSHIFT, PLUSEQUAL, MINUSEQUAL, MULTEQUAL, DIVEQUAL, LSHIFTEQUAL, RSHIFTEQUAL, URSHIFTEQUAL, ANDEQUAL, MODEQUAL, XOREQUAL, OREQUAL, '/', ')', '}', ']', ',', ':', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', '=', ';']

    '('  shift, and go to state 134
    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    $default  reduce using rule 45 (LeftHandSideExpr)

    Arguments  go to state 140


state 45

   46 PostfixExpr: LeftHandSideExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, '/', ')', '}', ']', ',', ':', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', ';']
   47            | LeftHandSideExpr . PLUSPLUS
   48            | LeftHandSideExpr . MINUSMINUS
   97 AssignmentExpr: LeftHandSideExpr . AssignmentOperator AssignmentExpr
   98 AssignmentOperator: . '='
   99                   | . PLUSEQUAL
  100                   | . MINUSEQUAL
  101                   | . MULTEQUAL
  102                   | . DIVEQUAL
  103                   | . LSHIFTEQUAL
  104                   | . RSHIFTEQUAL
  105                   | . URSHIFTEQUAL
  106                   | . ANDEQUAL
  107                   | . XOREQUAL
  108                   | . OREQUAL
  109                   | . MODEQUAL

    PLUSPLUS      shift, and go to state 141
    MINUSMINUS    shift, and go to state 142
    PLUSEQUAL     shift, and go to state 143
    MINUSEQUAL    shift, and go to state 144
    MULTEQUAL     shift, and go to state 145
    DIVEQUAL      shift, and go to state 146
    LSHIFTEQUAL   shift, and go to state 147
    RSHIFTEQUAL   shift, and go to state 148
    URSHIFTEQUAL  shift, and go to state 149
    ANDEQUAL      shift, and go to state 150
    MODEQUAL      shift, and go to state 151
    XOREQUAL      shift, and go to state 152
    OREQUAL       shift, and go to state 153
    '='           shift, and go to state 154

    $default  reduce using rule 46 (PostfixExpr)

    AssignmentOperator  go to state 155


state 46

   49 UnaryExpr: PostfixExpr .

    $default  reduce using rule 49 (UnaryExpr)


state 47

   61 MultiplicativeExpr: UnaryExpr .

    $default  reduce using rule 61 (MultiplicativeExpr)


state 48

   62 MultiplicativeExpr: MultiplicativeExpr . '*' UnaryExpr
   63                   | MultiplicativeExpr . '/' UnaryExpr
   64                   | MultiplicativeExpr . '%' UnaryExpr
   65 AdditiveExpr: MultiplicativeExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, ')', '}', ']', ',', ':', '+', '-', '<', '>', '&', '^', '|', '?', ';']

    '/'  shift, and go to state 156
    '*'  shift, and go to state 157
    '%'  shift, and go to state 158

    $default  reduce using rule 65 (AdditiveExpr)


state 49

   66 AdditiveExpr: AdditiveExpr . '+' MultiplicativeExpr
   67             | AdditiveExpr . '-' MultiplicativeExpr
   68 ShiftExpr: AdditiveExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    '+'  shift, and go to state 159
    '-'  shift, and go to state 160

    $default  reduce using rule 68 (ShiftExpr)


state 50

   69 ShiftExpr: ShiftExpr . LSHIFT AdditiveExpr
   70          | ShiftExpr . RSHIFT AdditiveExpr
   71          | ShiftExpr . URSHIFT AdditiveExpr
   72 RelationalExpr: ShiftExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    LSHIFT   shift, and go to state 161
    RSHIFT   shift, and go to state 162
    URSHIFT  shift, and go to state 163

    $default  reduce using rule 72 (RelationalExpr)


state 51

   73 RelationalExpr: RelationalExpr . '<' ShiftExpr
   74               | RelationalExpr . '>' ShiftExpr
   75               | RelationalExpr . LE ShiftExpr
   76               | RelationalExpr . GE ShiftExpr
   77               | RelationalExpr . INSTANCEOF ShiftExpr
   78               | RelationalExpr . IN ShiftExpr
   79 EqualityExpr: RelationalExpr .  [error, IN, EQEQ, NE, STREQ, STRNEQ, OR, AND, ')', '}', ']', ',', ':', '&', '^', '|', '?', ';']

    IN          shift, and go to state 164
    INSTANCEOF  shift, and go to state 165
    LE          shift, and go to state 166
    GE          shift, and go to state 167
    '<'         shift, and go to state 168
    '>'         shift, and go to state 169

    IN        [reduce using rule 79 (EqualityExpr)]
    $default  reduce using rule 79 (EqualityExpr)


state 52

   80 EqualityExpr: EqualityExpr . EQEQ RelationalExpr
   81             | EqualityExpr . NE RelationalExpr
   82             | EqualityExpr . STREQ RelationalExpr
   83             | EqualityExpr . STRNEQ RelationalExpr
   84 BitwiseANDExpr: EqualityExpr .  [error, IN, OR, AND, ')', '}', ']', ',', ':', '&', '^', '|', '?', ';']

    EQEQ    shift, and go to state 170
    NE      shift, and go to state 171
    STREQ   shift, and go to state 172
    STRNEQ  shift, and go to state 173

    $default  reduce using rule 84 (BitwiseANDExpr)


state 53

   85 BitwiseANDExpr: BitwiseANDExpr . '&' EqualityExpr
   86 BitwiseXORExpr: BitwiseANDExpr .  [error, IN, OR, AND, ')', '}', ']', ',', ':', '^', '|', '?', ';']

    '&'  shift, and go to state 174

    $default  reduce using rule 86 (BitwiseXORExpr)


state 54

   87 BitwiseXORExpr: BitwiseXORExpr . '^' BitwiseANDExpr
   88 BitwiseORExpr: BitwiseXORExpr .  [error, IN, OR, AND, ')', '}', ']', ',', ':', '|', '?', ';']

    '^'  shift, and go to state 175

    $default  reduce using rule 88 (BitwiseORExpr)


state 55

   89 BitwiseORExpr: BitwiseORExpr . '|' BitwiseXORExpr
   90 LogicalANDExpr: BitwiseORExpr .  [error, IN, OR, AND, ')', '}', ']', ',', ':', '?', ';']

    '|'  shift, and go to state 176

    $default  reduce using rule 90 (LogicalANDExpr)


state 56

   91 LogicalANDExpr: LogicalANDExpr . AND BitwiseORExpr
   92 LogicalORExpr: LogicalANDExpr .  [error, IN, OR, ')', '}', ']', ',', ':', '?', ';']

    AND  shift, and go to state 177

    $default  reduce using rule 92 (LogicalORExpr)


state 57

   93 LogicalORExpr: LogicalORExpr . OR LogicalANDExpr
   94 ConditionalExpr: LogicalORExpr .  [error, IN, ')', '}', ']', ',', ':', ';']
   95                | LogicalORExpr . '?' AssignmentExpr ':' AssignmentExpr

    OR   shift, and go to state 178
    '?'  shift, and go to state 179

    $default  reduce using rule 94 (ConditionalExpr)


state 58

   96 AssignmentExpr: ConditionalExpr .

    $default  reduce using rule 96 (AssignmentExpr)


state 59

  110 Expr: AssignmentExpr .

    $default  reduce using rule 110 (Expr)


state 60

  111 Expr: Expr . ',' AssignmentExpr
  138 ExprStatement: Expr . ';'
  139              | Expr . error

    error  shift, and go to state 180
    ','    shift, and go to state 181
    ';'    shift, and go to state 182


state 61

  194 SourceElement: Statement .

    $default  reduce using rule 194 (SourceElement)


state 62

  112 Statement: Block .

    $default  reduce using rule 112 (Statement)


state 63

  113 Statement: VariableStatement .

    $default  reduce using rule 113 (Statement)


state 64

  114 Statement: EmptyStatement .

    $default  reduce using rule 114 (Statement)


state 65

  115 Statement: ExprStatement .

    $default  reduce using rule 115 (Statement)


state 66

  116 Statement: IfStatement .

    $default  reduce using rule 116 (Statement)


state 67

  117 Statement: IterationStatement .

    $default  reduce using rule 117 (Statement)


state 68

  118 Statement: ContinueStatement .

    $default  reduce using rule 118 (Statement)


state 69

  119 Statement: BreakStatement .

    $default  reduce using rule 119 (Statement)


state 70

  120 Statement: ReturnStatement .

    $default  reduce using rule 120 (Statement)


state 71

  121 Statement: WithStatement .

    $default  reduce using rule 121 (Statement)


state 72

  122 Statement: SwitchStatement .

    $default  reduce using rule 122 (Statement)


state 73

  123 Statement: LabelledStatement .

    $default  reduce using rule 123 (Statement)


state 74

  124 Statement: ThrowStatement .

    $default  reduce using rule 124 (Statement)


state 75

  125 Statement: TryStatement .

    $default  reduce using rule 125 (Statement)


state 76

  195 SourceElement: FunctionDeclaration .

    $default  reduce using rule 195 (SourceElement)


state 77

   30 MemberExpr: FunctionExpr .

    $default  reduce using rule 30 (MemberExpr)


state 78

    0 $accept: Program . $end

    $end  shift, and go to state 183


state 79

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  182 FunctionDeclaration: . FUNCTION IDENT '(' ')' FunctionBody
  183                    | . FUNCTION IDENT '(' FormalParameterList ')' FunctionBody
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody
  191 Program: SourceElements .  [$end]
  193 SourceElements: SourceElements . SourceElement
  194 SourceElement: . Statement
  195              | . FunctionDeclaration

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 9
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    $default  reduce using rule 191 (Program)

    Literal              go to state 39
    PrimaryExpr          go to state 40
    ArrayLiteral         go to state 41
    MemberExpr           go to state 42
    NewExpr              go to state 43
    CallExpr             go to state 44
    LeftHandSideExpr     go to state 45
    PostfixExpr          go to state 46
    UnaryExpr            go to state 47
    MultiplicativeExpr   go to state 48
    AdditiveExpr         go to state 49
    ShiftExpr            go to state 50
    RelationalExpr       go to state 51
    EqualityExpr         go to state 52
    BitwiseANDExpr       go to state 53
    BitwiseXORExpr       go to state 54
    BitwiseORExpr        go to state 55
    LogicalANDExpr       go to state 56
    LogicalORExpr        go to state 57
    ConditionalExpr      go to state 58
    AssignmentExpr       go to state 59
    Expr                 go to state 60
    Statement            go to state 61
    Block                go to state 62
    VariableStatement    go to state 63
    EmptyStatement       go to state 64
    ExprStatement        go to state 65
    IfStatement          go to state 66
    IterationStatement   go to state 67
    ContinueStatement    go to state 68
    BreakStatement       go to state 69
    ReturnStatement      go to state 70
    WithStatement        go to state 71
    SwitchStatement      go to state 72
    LabelledStatement    go to state 73
    ThrowStatement       go to state 74
    TryStatement         go to state 75
    FunctionDeclaration  go to state 76
    FunctionExpr         go to state 77
    SourceElement        go to state 184


state 80

  192 SourceElements: SourceElement .

    $default  reduce using rule 192 (SourceElements)


state 81

  156 BreakStatement: BREAK error .

    $default  reduce using rule 156 (BreakStatement)


state 82

  157 BreakStatement: BREAK IDENT . ';'
  158               | BREAK IDENT . error

    error  shift, and go to state 185
    ';'    shift, and go to state 186


state 83

  155 BreakStatement: BREAK ';' .

    $default  reduce using rule 155 (BreakStatement)


state 84

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  144 IterationStatement: FOR '(' . ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | FOR '(' . VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | FOR '(' . LeftHandSideExpr IN Expr ')' Statement
  147                   | FOR '(' . VAR IDENT IN Expr ')' Statement
  148                   | FOR '(' . VAR IDENT Initializer IN Expr ')' Statement
  149 ExprOpt: .  [';']
  150        | . Expr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    VAR             shift, and go to state 187
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    $default  reduce using rule 149 (ExprOpt)

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 188
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 189
    ExprOpt             go to state 190
    FunctionExpr        go to state 77


state 85

  184 FunctionExpr: FUNCTION . '(' ')' FunctionBody
  185             | FUNCTION . '(' FormalParameterList ')' FunctionBody

    '('  shift, and go to state 97


state 86

    9 PrimaryExpr: IDENT .

    $default  reduce using rule 9 (PrimaryExpr)


state 87

   13 PrimaryExpr: '{' . '}'
   14            | '{' . PropertyNameAndValueList '}'
   24 PropertyNameAndValueList: . PropertyName ':' AssignmentExpr
   25                         | . PropertyNameAndValueList ',' PropertyName ':' AssignmentExpr
   26 PropertyName: . IDENT
   27             | . STRING
   28             | . NUMBER

    NUMBER  shift, and go to state 191
    STRING  shift, and go to state 192
    IDENT   shift, and go to state 193
    '}'     shift, and go to state 194

    PropertyNameAndValueList  go to state 123
    PropertyName              go to state 124


state 88

   31 MemberExpr: MemberExpr . '[' Expr ']'
   32           | MemberExpr . '.' IDENT
   33           | NEW MemberExpr . Arguments
   34 NewExpr: MemberExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, PLUSPLUS, MINUSMINUS, LSHIFT, RSHIFT, URSHIFT, PLUSEQUAL, MINUSEQUAL, MULTEQUAL, DIVEQUAL, LSHIFTEQUAL, RSHIFTEQUAL, URSHIFTEQUAL, ANDEQUAL, MODEQUAL, XOREQUAL, OREQUAL, '/', ')', '}', ']', ',', ':', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', '=', ';']
   40 Arguments: . '(' ')'
   41          | . '(' ArgumentList ')'

    '('  shift, and go to state 134
    '['  shift, and go to state 135
    '.'  shift, and go to state 136

    $default  reduce using rule 34 (NewExpr)

    Arguments  go to state 195


state 89

   35 NewExpr: NEW NewExpr .

    $default  reduce using rule 35 (NewExpr)


state 90

  134 VariableDeclaration: IDENT .  [error, ',', ';']
  135                    | IDENT . Initializer
  136 Initializer: . '=' AssignmentExpr

    '='  shift, and go to state 196

    $default  reduce using rule 134 (VariableDeclaration)

    Initializer  go to state 197


state 91

  130 VariableStatement: VAR VariableDeclarationList . ';'
  131                  | VAR VariableDeclarationList . error
  133 VariableDeclarationList: VariableDeclarationList . ',' VariableDeclaration

    error  shift, and go to state 198
    ','    shift, and go to state 199
    ';'    shift, and go to state 200


state 92

  132 VariableDeclarationList: VariableDeclaration .

    $default  reduce using rule 132 (VariableDeclarationList)


state 93

  152 ContinueStatement: CONTINUE error .

    $default  reduce using rule 152 (ContinueStatement)


state 94

  153 ContinueStatement: CONTINUE IDENT . ';'
  154                  | CONTINUE IDENT . error

    error  shift, and go to state 201
    ';'    shift, and go to state 202


state 95

  151 ContinueStatement: CONTINUE ';' .

    $default  reduce using rule 151 (ContinueStatement)


state 96

  182 FunctionDeclaration: FUNCTION IDENT . '(' ')' FunctionBody
  183                    | FUNCTION IDENT . '(' FormalParameterList ')' FunctionBody

    '('  shift, and go to state 203


state 97

  184 FunctionExpr: FUNCTION '(' . ')' FunctionBody
  185             | FUNCTION '(' . FormalParameterList ')' FunctionBody
  186 FormalParameterList: . IDENT
  187                    | . FormalParameterList ',' IDENT

    IDENT  shift, and go to state 204
    ')'    shift, and go to state 205

    FormalParameterList  go to state 206


state 98

  160 ReturnStatement: RETURN error .

    $default  reduce using rule 160 (ReturnStatement)


state 99

  159 ReturnStatement: RETURN ';' .

    $default  reduce using rule 159 (ReturnStatement)


state 100

  111 Expr: Expr . ',' AssignmentExpr
  161 ReturnStatement: RETURN Expr . ';'
  162                | RETURN Expr . error

    error  shift, and go to state 207
    ','    shift, and go to state 181
    ';'    shift, and go to state 208


state 101

   46 PostfixExpr: LeftHandSideExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, '/', ')', '}', ']', ',', ':', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', ';']
   47            | LeftHandSideExpr . PLUSPLUS
   48            | LeftHandSideExpr . MINUSMINUS

    PLUSPLUS    shift, and go to state 141
    MINUSMINUS  shift, and go to state 142

    $default  reduce using rule 46 (PostfixExpr)


state 102

   51 UnaryExpr: VOID UnaryExpr .

    $default  reduce using rule 51 (UnaryExpr)


state 103

   50 UnaryExpr: DELETE UnaryExpr .

    $default  reduce using rule 50 (UnaryExpr)


state 104

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  140 IfStatement: IF '(' . Expr ')' Statement
  141            | IF '(' . Expr ')' Statement ELSE Statement
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 209
    FunctionExpr        go to state 77


state 105

  142 IterationStatement: DO Statement . WHILE '(' Expr ')'

    WHILE  shift, and go to state 210


state 106

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  143 IterationStatement: WHILE '(' . Expr ')' Statement
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 211
    FunctionExpr        go to state 77


state 107

   52 UnaryExpr: TYPEOF UnaryExpr .

    $default  reduce using rule 52 (UnaryExpr)


state 108

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  164 SwitchStatement: SWITCH '(' . Expr ')' CaseBlock
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 212
    FunctionExpr        go to state 77


state 109

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  163 WithStatement: WITH '(' . Expr ')' Statement
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 213
    FunctionExpr        go to state 77


state 110

  111 Expr: Expr . ',' AssignmentExpr
  176 ThrowStatement: THROW Expr . ';'

    ','  shift, and go to state 181
    ';'  shift, and go to state 214


state 111

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  126      | '{' . '}'
  127      | . '{' SourceElements '}'
  127      | '{' . SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  182 FunctionDeclaration: . FUNCTION IDENT '(' ')' FunctionBody
  183                    | . FUNCTION IDENT '(' FormalParameterList ')' FunctionBody
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody
  192 SourceElements: . SourceElement
  193               | . SourceElements SourceElement
  194 SourceElement: . Statement
  195              | . FunctionDeclaration

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 9
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '}'             shift, and go to state 215
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal              go to state 39
    PrimaryExpr          go to state 40
    ArrayLiteral         go to state 41
    MemberExpr           go to state 42
    NewExpr              go to state 43
    CallExpr             go to state 44
    LeftHandSideExpr     go to state 45
    PostfixExpr          go to state 46
    UnaryExpr            go to state 47
    MultiplicativeExpr   go to state 48
    AdditiveExpr         go to state 49
    ShiftExpr            go to state 50
    RelationalExpr       go to state 51
    EqualityExpr         go to state 52
    BitwiseANDExpr       go to state 53
    BitwiseXORExpr       go to state 54
    BitwiseORExpr        go to state 55
    LogicalANDExpr       go to state 56
    LogicalORExpr        go to state 57
    ConditionalExpr      go to state 58
    AssignmentExpr       go to state 59
    Expr                 go to state 60
    Statement            go to state 61
    Block                go to state 62
    VariableStatement    go to state 63
    EmptyStatement       go to state 64
    ExprStatement        go to state 65
    IfStatement          go to state 66
    IterationStatement   go to state 67
    ContinueStatement    go to state 68
    BreakStatement       go to state 69
    ReturnStatement      go to state 70
    WithStatement        go to state 71
    SwitchStatement      go to state 72
    LabelledStatement    go to state 73
    ThrowStatement       go to state 74
    TryStatement         go to state 75
    FunctionDeclaration  go to state 76
    FunctionExpr         go to state 77
    SourceElements       go to state 125
    SourceElement        go to state 80


state 112

  177 TryStatement: TRY Block . Catch
  178             | TRY Block . Finally
  179             | TRY Block . Catch Finally
  180 Catch: . CATCH '(' IDENT ')' Block
  181 Finally: . FINALLY Block

    CATCH    shift, and go to state 216
    FINALLY  shift, and go to state 217

    Catch    go to state 218
    Finally  go to state 219


state 113

   53 UnaryExpr: PLUSPLUS UnaryExpr .

    $default  reduce using rule 53 (UnaryExpr)


state 114

   55 UnaryExpr: MINUSMINUS UnaryExpr .

    $default  reduce using rule 55 (UnaryExpr)


state 115

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  175                  | IDENT ':' . Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 220
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 116

   54 UnaryExpr: AUTOPLUSPLUS UnaryExpr .

    $default  reduce using rule 54 (UnaryExpr)


state 117

   56 UnaryExpr: AUTOMINUSMINUS UnaryExpr .

    $default  reduce using rule 56 (UnaryExpr)


state 118

   12 PrimaryExpr: '(' Expr . ')'
  111 Expr: Expr . ',' AssignmentExpr

    ')'  shift, and go to state 221
    ','  shift, and go to state 181


state 119

    4 Literal: NUMBER .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, PLUSPLUS, MINUSMINUS, LSHIFT, RSHIFT, URSHIFT, PLUSEQUAL, MINUSEQUAL, MULTEQUAL, DIVEQUAL, LSHIFTEQUAL, RSHIFTEQUAL, URSHIFTEQUAL, ANDEQUAL, MODEQUAL, XOREQUAL, OREQUAL, '/', '(', '[', ',', '.', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', '=', ';']
   28 PropertyName: NUMBER .  [':']

    ':'       reduce using rule 28 (PropertyName)
    $default  reduce using rule 4 (Literal)


state 120

    5 Literal: STRING .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, PLUSPLUS, MINUSMINUS, LSHIFT, RSHIFT, URSHIFT, PLUSEQUAL, MINUSEQUAL, MULTEQUAL, DIVEQUAL, LSHIFTEQUAL, RSHIFTEQUAL, URSHIFTEQUAL, ANDEQUAL, MODEQUAL, XOREQUAL, OREQUAL, '/', '(', '[', ',', '.', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', '=', ';']
   27 PropertyName: STRING .  [':']

    ':'       reduce using rule 27 (PropertyName)
    $default  reduce using rule 5 (Literal)


state 121

    9 PrimaryExpr: IDENT .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, PLUSPLUS, MINUSMINUS, LSHIFT, RSHIFT, URSHIFT, PLUSEQUAL, MINUSEQUAL, MULTEQUAL, DIVEQUAL, LSHIFTEQUAL, RSHIFTEQUAL, URSHIFTEQUAL, ANDEQUAL, MODEQUAL, XOREQUAL, OREQUAL, '/', '(', '[', ',', '.', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', '=', ';']
   26 PropertyName: IDENT .  [':']
  175 LabelledStatement: IDENT . ':' Statement

    ':'  shift, and go to state 115

    ':'       [reduce using rule 26 (PropertyName)]
    $default  reduce using rule 9 (PrimaryExpr)


state 122

   13 PrimaryExpr: '{' '}' .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, PLUSPLUS, MINUSMINUS, LSHIFT, RSHIFT, URSHIFT, PLUSEQUAL, MINUSEQUAL, MULTEQUAL, DIVEQUAL, LSHIFTEQUAL, RSHIFTEQUAL, URSHIFTEQUAL, ANDEQUAL, MODEQUAL, XOREQUAL, OREQUAL, '/', '(', '[', ',', '.', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', '=', ';']
  126 Block: '{' '}' .  [$end, NULLTOKEN, TRUETOKEN, FALSETOKEN, BREAK, CASE, DEFAULT, FOR, NEW, VAR, CONTINUE, FUNCTION, RETURN, VOID, DELETE, IF, THIS, DO, WHILE, ELSE, TYPEOF, SWITCH, WITH, THROW, TRY, PLUSPLUS, MINUSMINUS, DIVEQUAL, NUMBER, STRING, IDENT, AUTOPLUSPLUS, AUTOMINUSMINUS, '/', '(', '{', '}', '[', '+', '-', '~', '!', ';']

    $end            reduce using rule 126 (Block)
    NULLTOKEN       reduce using rule 126 (Block)
    TRUETOKEN       reduce using rule 126 (Block)
    FALSETOKEN      reduce using rule 126 (Block)
    BREAK           reduce using rule 126 (Block)
    CASE            reduce using rule 126 (Block)
    DEFAULT         reduce using rule 126 (Block)
    FOR             reduce using rule 126 (Block)
    NEW             reduce using rule 126 (Block)
    VAR             reduce using rule 126 (Block)
    CONTINUE        reduce using rule 126 (Block)
    FUNCTION        reduce using rule 126 (Block)
    RETURN          reduce using rule 126 (Block)
    VOID            reduce using rule 126 (Block)
    DELETE          reduce using rule 126 (Block)
    IF              reduce using rule 126 (Block)
    THIS            reduce using rule 126 (Block)
    DO              reduce using rule 126 (Block)
    WHILE           reduce using rule 126 (Block)
    ELSE            reduce using rule 126 (Block)
    TYPEOF          reduce using rule 126 (Block)
    SWITCH          reduce using rule 126 (Block)
    WITH            reduce using rule 126 (Block)
    THROW           reduce using rule 126 (Block)
    TRY             reduce using rule 126 (Block)
    PLUSPLUS        reduce using rule 13 (PrimaryExpr)
    PLUSPLUS        [reduce using rule 126 (Block)]
    MINUSMINUS      reduce using rule 13 (PrimaryExpr)
    MINUSMINUS      [reduce using rule 126 (Block)]
    DIVEQUAL        reduce using rule 13 (PrimaryExpr)
    DIVEQUAL        [reduce using rule 126 (Block)]
    NUMBER          reduce using rule 126 (Block)
    STRING          reduce using rule 126 (Block)
    IDENT           reduce using rule 126 (Block)
    AUTOPLUSPLUS    reduce using rule 126 (Block)
    AUTOMINUSMINUS  reduce using rule 126 (Block)
    '/'             reduce using rule 13 (PrimaryExpr)
    '/'             [reduce using rule 126 (Block)]
    '('             reduce using rule 13 (PrimaryExpr)
    '('             [reduce using rule 126 (Block)]
    '{'             reduce using rule 126 (Block)
    '}'             reduce using rule 126 (Block)
    '['             reduce using rule 13 (PrimaryExpr)
    '['             [reduce using rule 126 (Block)]
    '+'             reduce using rule 13 (PrimaryExpr)
    '+'             [reduce using rule 126 (Block)]
    '-'             reduce using rule 13 (PrimaryExpr)
    '-'             [reduce using rule 126 (Block)]
    '~'             reduce using rule 126 (Block)
    '!'             reduce using rule 126 (Block)
    ';'             reduce using rule 13 (PrimaryExpr)
    ';'             [reduce using rule 126 (Block)]
    $default        reduce using rule 13 (PrimaryExpr)


state 123

   14 PrimaryExpr: '{' PropertyNameAndValueList . '}'
   25 PropertyNameAndValueList: PropertyNameAndValueList . ',' PropertyName ':' AssignmentExpr

    '}'  shift, and go to state 222
    ','  shift, and go to state 223


state 124

   24 PropertyNameAndValueList: PropertyName . ':' AssignmentExpr

    ':'  shift, and go to state 224


state 125

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  127      | '{' SourceElements . '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  182 FunctionDeclaration: . FUNCTION IDENT '(' ')' FunctionBody
  183                    | . FUNCTION IDENT '(' FormalParameterList ')' FunctionBody
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody
  193 SourceElements: SourceElements . SourceElement
  194 SourceElement: . Statement
  195              | . FunctionDeclaration

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 9
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '}'             shift, and go to state 225
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal              go to state 39
    PrimaryExpr          go to state 40
    ArrayLiteral         go to state 41
    MemberExpr           go to state 42
    NewExpr              go to state 43
    CallExpr             go to state 44
    LeftHandSideExpr     go to state 45
    PostfixExpr          go to state 46
    UnaryExpr            go to state 47
    MultiplicativeExpr   go to state 48
    AdditiveExpr         go to state 49
    ShiftExpr            go to state 50
    RelationalExpr       go to state 51
    EqualityExpr         go to state 52
    BitwiseANDExpr       go to state 53
    BitwiseXORExpr       go to state 54
    BitwiseORExpr        go to state 55
    LogicalANDExpr       go to state 56
    LogicalORExpr        go to state 57
    ConditionalExpr      go to state 58
    AssignmentExpr       go to state 59
    Expr                 go to state 60
    Statement            go to state 61
    Block                go to state 62
    VariableStatement    go to state 63
    EmptyStatement       go to state 64
    ExprStatement        go to state 65
    IfStatement          go to state 66
    IterationStatement   go to state 67
    ContinueStatement    go to state 68
    BreakStatement       go to state 69
    ReturnStatement      go to state 70
    WithStatement        go to state 71
    SwitchStatement      go to state 72
    LabelledStatement    go to state 73
    ThrowStatement       go to state 74
    TryStatement         go to state 75
    FunctionDeclaration  go to state 76
    FunctionExpr         go to state 77
    SourceElement        go to state 184


state 126

   22 Elision: ',' .

    $default  reduce using rule 22 (Elision)


state 127

   16 ArrayLiteral: '[' ElementList . ']'
   17             | '[' ElementList . ',' ElisionOpt ']'
   19 ElementList: ElementList . ',' ElisionOpt AssignmentExpr

    ']'  shift, and go to state 226
    ','  shift, and go to state 227


state 128

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   15             | '[' ElisionOpt . ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   18 ElementList: ElisionOpt . AssignmentExpr
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    ']'             shift, and go to state 228
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 229
    FunctionExpr        go to state 77


state 129

   21 ElisionOpt: Elision .  [NULLTOKEN, TRUETOKEN, FALSETOKEN, NEW, FUNCTION, VOID, DELETE, THIS, TYPEOF, PLUSPLUS, MINUSMINUS, DIVEQUAL, NUMBER, STRING, IDENT, AUTOPLUSPLUS, AUTOMINUSMINUS, '/', '(', '{', '[', ']', '+', '-', '~', '!']
   23 Elision: Elision . ','

    ','  shift, and go to state 230

    $default  reduce using rule 21 (ElisionOpt)


state 130

   57 UnaryExpr: '+' UnaryExpr .

    $default  reduce using rule 57 (UnaryExpr)


state 131

   58 UnaryExpr: '-' UnaryExpr .

    $default  reduce using rule 58 (UnaryExpr)


state 132

   59 UnaryExpr: '~' UnaryExpr .

    $default  reduce using rule 59 (UnaryExpr)


state 133

   60 UnaryExpr: '!' UnaryExpr .

    $default  reduce using rule 60 (UnaryExpr)


state 134

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   40 Arguments: '(' . ')'
   41          | '(' . ArgumentList ')'
   42 ArgumentList: . AssignmentExpr
   43             | . ArgumentList ',' AssignmentExpr
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    ')'             shift, and go to state 231
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    ArgumentList        go to state 232
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 233
    FunctionExpr        go to state 77


state 135

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   31           | MemberExpr '[' . Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 234
    FunctionExpr        go to state 77


state 136

   32 MemberExpr: MemberExpr '.' . IDENT

    IDENT  shift, and go to state 235


state 137

   36 CallExpr: MemberExpr Arguments .

    $default  reduce using rule 36 (CallExpr)


state 138

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   38         | CallExpr '[' . Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 236
    FunctionExpr        go to state 77


state 139

   39 CallExpr: CallExpr '.' . IDENT

    IDENT  shift, and go to state 237


state 140

   37 CallExpr: CallExpr Arguments .

    $default  reduce using rule 37 (CallExpr)


state 141

   47 PostfixExpr: LeftHandSideExpr PLUSPLUS .

    $default  reduce using rule 47 (PostfixExpr)


state 142

   48 PostfixExpr: LeftHandSideExpr MINUSMINUS .

    $default  reduce using rule 48 (PostfixExpr)


state 143

   99 AssignmentOperator: PLUSEQUAL .

    $default  reduce using rule 99 (AssignmentOperator)


state 144

  100 AssignmentOperator: MINUSEQUAL .

    $default  reduce using rule 100 (AssignmentOperator)


state 145

  101 AssignmentOperator: MULTEQUAL .

    $default  reduce using rule 101 (AssignmentOperator)


state 146

  102 AssignmentOperator: DIVEQUAL .

    $default  reduce using rule 102 (AssignmentOperator)


state 147

  103 AssignmentOperator: LSHIFTEQUAL .

    $default  reduce using rule 103 (AssignmentOperator)


state 148

  104 AssignmentOperator: RSHIFTEQUAL .

    $default  reduce using rule 104 (AssignmentOperator)


state 149

  105 AssignmentOperator: URSHIFTEQUAL .

    $default  reduce using rule 105 (AssignmentOperator)


state 150

  106 AssignmentOperator: ANDEQUAL .

    $default  reduce using rule 106 (AssignmentOperator)


state 151

  109 AssignmentOperator: MODEQUAL .

    $default  reduce using rule 109 (AssignmentOperator)


state 152

  107 AssignmentOperator: XOREQUAL .

    $default  reduce using rule 107 (AssignmentOperator)


state 153

  108 AssignmentOperator: OREQUAL .

    $default  reduce using rule 108 (AssignmentOperator)


state 154

   98 AssignmentOperator: '=' .

    $default  reduce using rule 98 (AssignmentOperator)


state 155

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
   97               | LeftHandSideExpr AssignmentOperator . AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 238
    FunctionExpr        go to state 77


state 156

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   63 MultiplicativeExpr: MultiplicativeExpr '/' . UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 239
    FunctionExpr      go to state 77


state 157

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   62 MultiplicativeExpr: MultiplicativeExpr '*' . UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 240
    FunctionExpr      go to state 77


state 158

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   64 MultiplicativeExpr: MultiplicativeExpr '%' . UnaryExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal           go to state 39
    PrimaryExpr       go to state 40
    ArrayLiteral      go to state 41
    MemberExpr        go to state 42
    NewExpr           go to state 43
    CallExpr          go to state 44
    LeftHandSideExpr  go to state 101
    PostfixExpr       go to state 46
    UnaryExpr         go to state 241
    FunctionExpr      go to state 77


state 159

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   66 AdditiveExpr: AdditiveExpr '+' . MultiplicativeExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 242
    FunctionExpr        go to state 77


state 160

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   67 AdditiveExpr: AdditiveExpr '-' . MultiplicativeExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 243
    FunctionExpr        go to state 77


state 161

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   69 ShiftExpr: ShiftExpr LSHIFT . AdditiveExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 244
    FunctionExpr        go to state 77


state 162

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   70 ShiftExpr: ShiftExpr RSHIFT . AdditiveExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 245
    FunctionExpr        go to state 77


state 163

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   71 ShiftExpr: ShiftExpr URSHIFT . AdditiveExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 246
    FunctionExpr        go to state 77


state 164

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   78 RelationalExpr: RelationalExpr IN . ShiftExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 247
    FunctionExpr        go to state 77


state 165

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   77 RelationalExpr: RelationalExpr INSTANCEOF . ShiftExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 248
    FunctionExpr        go to state 77


state 166

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   75 RelationalExpr: RelationalExpr LE . ShiftExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 249
    FunctionExpr        go to state 77


state 167

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   76 RelationalExpr: RelationalExpr GE . ShiftExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 250
    FunctionExpr        go to state 77


state 168

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   73 RelationalExpr: RelationalExpr '<' . ShiftExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 251
    FunctionExpr        go to state 77


state 169

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   74 RelationalExpr: RelationalExpr '>' . ShiftExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 252
    FunctionExpr        go to state 77


state 170

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   80 EqualityExpr: EqualityExpr EQEQ . RelationalExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 253
    FunctionExpr        go to state 77


state 171

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   81 EqualityExpr: EqualityExpr NE . RelationalExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 254
    FunctionExpr        go to state 77


state 172

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   82 EqualityExpr: EqualityExpr STREQ . RelationalExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 255
    FunctionExpr        go to state 77


state 173

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   83 EqualityExpr: EqualityExpr STRNEQ . RelationalExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 256
    FunctionExpr        go to state 77


state 174

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   85 BitwiseANDExpr: BitwiseANDExpr '&' . EqualityExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 257
    FunctionExpr        go to state 77


state 175

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   87 BitwiseXORExpr: BitwiseXORExpr '^' . BitwiseANDExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 258
    FunctionExpr        go to state 77


state 176

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   89 BitwiseORExpr: BitwiseORExpr '|' . BitwiseXORExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 259
    FunctionExpr        go to state 77


state 177

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   91 LogicalANDExpr: LogicalANDExpr AND . BitwiseORExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 260
    FunctionExpr        go to state 77


state 178

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   93 LogicalORExpr: LogicalORExpr OR . LogicalANDExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 101
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 261
    FunctionExpr        go to state 77


state 179

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   95                | LogicalORExpr '?' . AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 262
    FunctionExpr        go to state 77


state 180

  139 ExprStatement: Expr error .

    $default  reduce using rule 139 (ExprStatement)


state 181

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  111 Expr: Expr ',' . AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 263
    FunctionExpr        go to state 77


state 182

  138 ExprStatement: Expr ';' .

    $default  reduce using rule 138 (ExprStatement)


state 183

    0 $accept: Program $end .

    $default  accept


state 184

  193 SourceElements: SourceElements SourceElement .

    $default  reduce using rule 193 (SourceElements)


state 185

  158 BreakStatement: BREAK IDENT error .

    $default  reduce using rule 158 (BreakStatement)


state 186

  157 BreakStatement: BREAK IDENT ';' .

    $default  reduce using rule 157 (BreakStatement)


state 187

  132 VariableDeclarationList: . VariableDeclaration
  133                        | . VariableDeclarationList ',' VariableDeclaration
  134 VariableDeclaration: . IDENT
  135                    | . IDENT Initializer
  145 IterationStatement: FOR '(' VAR . VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  147                   | FOR '(' VAR . IDENT IN Expr ')' Statement
  148                   | FOR '(' VAR . IDENT Initializer IN Expr ')' Statement

    IDENT  shift, and go to state 264

    VariableDeclarationList  go to state 265
    VariableDeclaration      go to state 92


state 188

   46 PostfixExpr: LeftHandSideExpr .  [IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, '/', ',', '+', '-', '*', '%', '<', '>', '&', '^', '|', '?', ';']
   47            | LeftHandSideExpr . PLUSPLUS
   48            | LeftHandSideExpr . MINUSMINUS
   97 AssignmentExpr: LeftHandSideExpr . AssignmentOperator AssignmentExpr
   98 AssignmentOperator: . '='
   99                   | . PLUSEQUAL
  100                   | . MINUSEQUAL
  101                   | . MULTEQUAL
  102                   | . DIVEQUAL
  103                   | . LSHIFTEQUAL
  104                   | . RSHIFTEQUAL
  105                   | . URSHIFTEQUAL
  106                   | . ANDEQUAL
  107                   | . XOREQUAL
  108                   | . OREQUAL
  109                   | . MODEQUAL
  146 IterationStatement: FOR '(' LeftHandSideExpr . IN Expr ')' Statement

    IN            shift, and go to state 266
    PLUSPLUS      shift, and go to state 141
    MINUSMINUS    shift, and go to state 142
    PLUSEQUAL     shift, and go to state 143
    MINUSEQUAL    shift, and go to state 144
    MULTEQUAL     shift, and go to state 145
    DIVEQUAL      shift, and go to state 146
    LSHIFTEQUAL   shift, and go to state 147
    RSHIFTEQUAL   shift, and go to state 148
    URSHIFTEQUAL  shift, and go to state 149
    ANDEQUAL      shift, and go to state 150
    MODEQUAL      shift, and go to state 151
    XOREQUAL      shift, and go to state 152
    OREQUAL       shift, and go to state 153
    '='           shift, and go to state 154

    IN        [reduce using rule 46 (PostfixExpr)]
    $default  reduce using rule 46 (PostfixExpr)

    AssignmentOperator  go to state 155


state 189

  111 Expr: Expr . ',' AssignmentExpr
  150 ExprOpt: Expr .  [')', ';']

    ','  shift, and go to state 181

    $default  reduce using rule 150 (ExprOpt)


state 190

  144 IterationStatement: FOR '(' ExprOpt . ';' ExprOpt ';' ExprOpt ')' Statement

    ';'  shift, and go to state 267


state 191

   28 PropertyName: NUMBER .

    $default  reduce using rule 28 (PropertyName)


state 192

   27 PropertyName: STRING .

    $default  reduce using rule 27 (PropertyName)


state 193

   26 PropertyName: IDENT .

    $default  reduce using rule 26 (PropertyName)


state 194

   13 PrimaryExpr: '{' '}' .

    $default  reduce using rule 13 (PrimaryExpr)


state 195

   33 MemberExpr: NEW MemberExpr Arguments .

    $default  reduce using rule 33 (MemberExpr)


state 196

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  136 Initializer: '=' . AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 268
    FunctionExpr        go to state 77


state 197

  135 VariableDeclaration: IDENT Initializer .

    $default  reduce using rule 135 (VariableDeclaration)


state 198

  131 VariableStatement: VAR VariableDeclarationList error .

    $default  reduce using rule 131 (VariableStatement)


state 199

  133 VariableDeclarationList: VariableDeclarationList ',' . VariableDeclaration
  134 VariableDeclaration: . IDENT
  135                    | . IDENT Initializer

    IDENT  shift, and go to state 90

    VariableDeclaration  go to state 269


state 200

  130 VariableStatement: VAR VariableDeclarationList ';' .

    $default  reduce using rule 130 (VariableStatement)


state 201

  154 ContinueStatement: CONTINUE IDENT error .

    $default  reduce using rule 154 (ContinueStatement)


state 202

  153 ContinueStatement: CONTINUE IDENT ';' .

    $default  reduce using rule 153 (ContinueStatement)


state 203

  182 FunctionDeclaration: FUNCTION IDENT '(' . ')' FunctionBody
  183                    | FUNCTION IDENT '(' . FormalParameterList ')' FunctionBody
  186 FormalParameterList: . IDENT
  187                    | . FormalParameterList ',' IDENT

    IDENT  shift, and go to state 204
    ')'    shift, and go to state 270

    FormalParameterList  go to state 271


state 204

  186 FormalParameterList: IDENT .

    $default  reduce using rule 186 (FormalParameterList)


state 205

  184 FunctionExpr: FUNCTION '(' ')' . FunctionBody
  188 FunctionBody: . '{' '}'
  189             | . '{' SourceElements '}'

    '{'  shift, and go to state 272

    FunctionBody  go to state 273


state 206

  185 FunctionExpr: FUNCTION '(' FormalParameterList . ')' FunctionBody
  187 FormalParameterList: FormalParameterList . ',' IDENT

    ')'  shift, and go to state 274
    ','  shift, and go to state 275


state 207

  162 ReturnStatement: RETURN Expr error .

    $default  reduce using rule 162 (ReturnStatement)


state 208

  161 ReturnStatement: RETURN Expr ';' .

    $default  reduce using rule 161 (ReturnStatement)


state 209

  111 Expr: Expr . ',' AssignmentExpr
  140 IfStatement: IF '(' Expr . ')' Statement
  141            | IF '(' Expr . ')' Statement ELSE Statement

    ')'  shift, and go to state 276
    ','  shift, and go to state 181


state 210

  142 IterationStatement: DO Statement WHILE . '(' Expr ')'

    '('  shift, and go to state 277


state 211

  111 Expr: Expr . ',' AssignmentExpr
  143 IterationStatement: WHILE '(' Expr . ')' Statement

    ')'  shift, and go to state 278
    ','  shift, and go to state 181


state 212

  111 Expr: Expr . ',' AssignmentExpr
  164 SwitchStatement: SWITCH '(' Expr . ')' CaseBlock

    ')'  shift, and go to state 279
    ','  shift, and go to state 181


state 213

  111 Expr: Expr . ',' AssignmentExpr
  163 WithStatement: WITH '(' Expr . ')' Statement

    ')'  shift, and go to state 280
    ','  shift, and go to state 181


state 214

  176 ThrowStatement: THROW Expr ';' .

    $default  reduce using rule 176 (ThrowStatement)


state 215

  126 Block: '{' '}' .

    $default  reduce using rule 126 (Block)


state 216

  180 Catch: CATCH . '(' IDENT ')' Block

    '('  shift, and go to state 281


state 217

  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  181 Finally: FINALLY . Block

    '{'  shift, and go to state 111

    Block  go to state 282


state 218

  177 TryStatement: TRY Block Catch .  [$end, NULLTOKEN, TRUETOKEN, FALSETOKEN, BREAK, CASE, DEFAULT, FOR, NEW, VAR, CONTINUE, FUNCTION, RETURN, VOID, DELETE, IF, THIS, DO, WHILE, ELSE, TYPEOF, SWITCH, WITH, THROW, TRY, PLUSPLUS, MINUSMINUS, DIVEQUAL, NUMBER, STRING, IDENT, AUTOPLUSPLUS, AUTOMINUSMINUS, '/', '(', '{', '}', '[', '+', '-', '~', '!', ';']
  179             | TRY Block Catch . Finally
  181 Finally: . FINALLY Block

    FINALLY  shift, and go to state 217

    $default  reduce using rule 177 (TryStatement)

    Finally  go to state 283


state 219

  178 TryStatement: TRY Block Finally .

    $default  reduce using rule 178 (TryStatement)


state 220

  175 LabelledStatement: IDENT ':' Statement .

    $default  reduce using rule 175 (LabelledStatement)


state 221

   12 PrimaryExpr: '(' Expr ')' .

    $default  reduce using rule 12 (PrimaryExpr)


state 222

   14 PrimaryExpr: '{' PropertyNameAndValueList '}' .

    $default  reduce using rule 14 (PrimaryExpr)


state 223

   25 PropertyNameAndValueList: PropertyNameAndValueList ',' . PropertyName ':' AssignmentExpr
   26 PropertyName: . IDENT
   27             | . STRING
   28             | . NUMBER

    NUMBER  shift, and go to state 191
    STRING  shift, and go to state 192
    IDENT   shift, and go to state 193

    PropertyName  go to state 284


state 224

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   24 PropertyNameAndValueList: PropertyName ':' . AssignmentExpr
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 285
    FunctionExpr        go to state 77


state 225

  127 Block: '{' SourceElements '}' .

    $default  reduce using rule 127 (Block)


state 226

   16 ArrayLiteral: '[' ElementList ']' .

    $default  reduce using rule 16 (ArrayLiteral)


state 227

   17 ArrayLiteral: '[' ElementList ',' . ElisionOpt ']'
   19 ElementList: ElementList ',' . ElisionOpt AssignmentExpr
   20 ElisionOpt: .  [NULLTOKEN, TRUETOKEN, FALSETOKEN, NEW, FUNCTION, VOID, DELETE, THIS, TYPEOF, PLUSPLUS, MINUSMINUS, DIVEQUAL, NUMBER, STRING, IDENT, AUTOPLUSPLUS, AUTOMINUSMINUS, '/', '(', '{', '[', ']', '+', '-', '~', '!']
   21           | . Elision
   22 Elision: . ','
   23        | . Elision ','

    ','  shift, and go to state 126

    $default  reduce using rule 20 (ElisionOpt)

    ElisionOpt  go to state 286
    Elision     go to state 129


state 228

   15 ArrayLiteral: '[' ElisionOpt ']' .

    $default  reduce using rule 15 (ArrayLiteral)


state 229

   18 ElementList: ElisionOpt AssignmentExpr .

    $default  reduce using rule 18 (ElementList)


state 230

   23 Elision: Elision ',' .

    $default  reduce using rule 23 (Elision)


state 231

   40 Arguments: '(' ')' .

    $default  reduce using rule 40 (Arguments)


state 232

   41 Arguments: '(' ArgumentList . ')'
   43 ArgumentList: ArgumentList . ',' AssignmentExpr

    ')'  shift, and go to state 287
    ','  shift, and go to state 288


state 233

   42 ArgumentList: AssignmentExpr .

    $default  reduce using rule 42 (ArgumentList)


state 234

   31 MemberExpr: MemberExpr '[' Expr . ']'
  111 Expr: Expr . ',' AssignmentExpr

    ']'  shift, and go to state 289
    ','  shift, and go to state 181


state 235

   32 MemberExpr: MemberExpr '.' IDENT .

    $default  reduce using rule 32 (MemberExpr)


state 236

   38 CallExpr: CallExpr '[' Expr . ']'
  111 Expr: Expr . ',' AssignmentExpr

    ']'  shift, and go to state 290
    ','  shift, and go to state 181


state 237

   39 CallExpr: CallExpr '.' IDENT .

    $default  reduce using rule 39 (CallExpr)


state 238

   97 AssignmentExpr: LeftHandSideExpr AssignmentOperator AssignmentExpr .

    $default  reduce using rule 97 (AssignmentExpr)


state 239

   63 MultiplicativeExpr: MultiplicativeExpr '/' UnaryExpr .

    $default  reduce using rule 63 (MultiplicativeExpr)


state 240

   62 MultiplicativeExpr: MultiplicativeExpr '*' UnaryExpr .

    $default  reduce using rule 62 (MultiplicativeExpr)


state 241

   64 MultiplicativeExpr: MultiplicativeExpr '%' UnaryExpr .

    $default  reduce using rule 64 (MultiplicativeExpr)


state 242

   62 MultiplicativeExpr: MultiplicativeExpr . '*' UnaryExpr
   63                   | MultiplicativeExpr . '/' UnaryExpr
   64                   | MultiplicativeExpr . '%' UnaryExpr
   66 AdditiveExpr: AdditiveExpr '+' MultiplicativeExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, ')', '}', ']', ',', ':', '+', '-', '<', '>', '&', '^', '|', '?', ';']

    '/'  shift, and go to state 156
    '*'  shift, and go to state 157
    '%'  shift, and go to state 158

    $default  reduce using rule 66 (AdditiveExpr)


state 243

   62 MultiplicativeExpr: MultiplicativeExpr . '*' UnaryExpr
   63                   | MultiplicativeExpr . '/' UnaryExpr
   64                   | MultiplicativeExpr . '%' UnaryExpr
   67 AdditiveExpr: AdditiveExpr '-' MultiplicativeExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, ')', '}', ']', ',', ':', '+', '-', '<', '>', '&', '^', '|', '?', ';']

    '/'  shift, and go to state 156
    '*'  shift, and go to state 157
    '%'  shift, and go to state 158

    $default  reduce using rule 67 (AdditiveExpr)


state 244

   66 AdditiveExpr: AdditiveExpr . '+' MultiplicativeExpr
   67             | AdditiveExpr . '-' MultiplicativeExpr
   69 ShiftExpr: ShiftExpr LSHIFT AdditiveExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    '+'  shift, and go to state 159
    '-'  shift, and go to state 160

    $default  reduce using rule 69 (ShiftExpr)


state 245

   66 AdditiveExpr: AdditiveExpr . '+' MultiplicativeExpr
   67             | AdditiveExpr . '-' MultiplicativeExpr
   70 ShiftExpr: ShiftExpr RSHIFT AdditiveExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    '+'  shift, and go to state 159
    '-'  shift, and go to state 160

    $default  reduce using rule 70 (ShiftExpr)


state 246

   66 AdditiveExpr: AdditiveExpr . '+' MultiplicativeExpr
   67             | AdditiveExpr . '-' MultiplicativeExpr
   71 ShiftExpr: ShiftExpr URSHIFT AdditiveExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, LSHIFT, RSHIFT, URSHIFT, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    '+'  shift, and go to state 159
    '-'  shift, and go to state 160

    $default  reduce using rule 71 (ShiftExpr)


state 247

   69 ShiftExpr: ShiftExpr . LSHIFT AdditiveExpr
   70          | ShiftExpr . RSHIFT AdditiveExpr
   71          | ShiftExpr . URSHIFT AdditiveExpr
   78 RelationalExpr: RelationalExpr IN ShiftExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    LSHIFT   shift, and go to state 161
    RSHIFT   shift, and go to state 162
    URSHIFT  shift, and go to state 163

    $default  reduce using rule 78 (RelationalExpr)


state 248

   69 ShiftExpr: ShiftExpr . LSHIFT AdditiveExpr
   70          | ShiftExpr . RSHIFT AdditiveExpr
   71          | ShiftExpr . URSHIFT AdditiveExpr
   77 RelationalExpr: RelationalExpr INSTANCEOF ShiftExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    LSHIFT   shift, and go to state 161
    RSHIFT   shift, and go to state 162
    URSHIFT  shift, and go to state 163

    $default  reduce using rule 77 (RelationalExpr)


state 249

   69 ShiftExpr: ShiftExpr . LSHIFT AdditiveExpr
   70          | ShiftExpr . RSHIFT AdditiveExpr
   71          | ShiftExpr . URSHIFT AdditiveExpr
   75 RelationalExpr: RelationalExpr LE ShiftExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    LSHIFT   shift, and go to state 161
    RSHIFT   shift, and go to state 162
    URSHIFT  shift, and go to state 163

    $default  reduce using rule 75 (RelationalExpr)


state 250

   69 ShiftExpr: ShiftExpr . LSHIFT AdditiveExpr
   70          | ShiftExpr . RSHIFT AdditiveExpr
   71          | ShiftExpr . URSHIFT AdditiveExpr
   76 RelationalExpr: RelationalExpr GE ShiftExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    LSHIFT   shift, and go to state 161
    RSHIFT   shift, and go to state 162
    URSHIFT  shift, and go to state 163

    $default  reduce using rule 76 (RelationalExpr)


state 251

   69 ShiftExpr: ShiftExpr . LSHIFT AdditiveExpr
   70          | ShiftExpr . RSHIFT AdditiveExpr
   71          | ShiftExpr . URSHIFT AdditiveExpr
   73 RelationalExpr: RelationalExpr '<' ShiftExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    LSHIFT   shift, and go to state 161
    RSHIFT   shift, and go to state 162
    URSHIFT  shift, and go to state 163

    $default  reduce using rule 73 (RelationalExpr)


state 252

   69 ShiftExpr: ShiftExpr . LSHIFT AdditiveExpr
   70          | ShiftExpr . RSHIFT AdditiveExpr
   71          | ShiftExpr . URSHIFT AdditiveExpr
   74 RelationalExpr: RelationalExpr '>' ShiftExpr .  [error, IN, INSTANCEOF, EQEQ, NE, STREQ, STRNEQ, LE, GE, OR, AND, ')', '}', ']', ',', ':', '<', '>', '&', '^', '|', '?', ';']

    LSHIFT   shift, and go to state 161
    RSHIFT   shift, and go to state 162
    URSHIFT  shift, and go to state 163

    $default  reduce using rule 74 (RelationalExpr)


state 253

   73 RelationalExpr: RelationalExpr . '<' ShiftExpr
   74               | RelationalExpr . '>' ShiftExpr
   75               | RelationalExpr . LE ShiftExpr
   76               | RelationalExpr . GE ShiftExpr
   77               | RelationalExpr . INSTANCEOF ShiftExpr
   78               | RelationalExpr . IN ShiftExpr
   80 EqualityExpr: EqualityExpr EQEQ RelationalExpr .  [error, IN, EQEQ, NE, STREQ, STRNEQ, OR, AND, ')', '}', ']', ',', ':', '&', '^', '|', '?', ';']

    IN          shift, and go to state 164
    INSTANCEOF  shift, and go to state 165
    LE          shift, and go to state 166
    GE          shift, and go to state 167
    '<'         shift, and go to state 168
    '>'         shift, and go to state 169

    IN        [reduce using rule 80 (EqualityExpr)]
    $default  reduce using rule 80 (EqualityExpr)


state 254

   73 RelationalExpr: RelationalExpr . '<' ShiftExpr
   74               | RelationalExpr . '>' ShiftExpr
   75               | RelationalExpr . LE ShiftExpr
   76               | RelationalExpr . GE ShiftExpr
   77               | RelationalExpr . INSTANCEOF ShiftExpr
   78               | RelationalExpr . IN ShiftExpr
   81 EqualityExpr: EqualityExpr NE RelationalExpr .  [error, IN, EQEQ, NE, STREQ, STRNEQ, OR, AND, ')', '}', ']', ',', ':', '&', '^', '|', '?', ';']

    IN          shift, and go to state 164
    INSTANCEOF  shift, and go to state 165
    LE          shift, and go to state 166
    GE          shift, and go to state 167
    '<'         shift, and go to state 168
    '>'         shift, and go to state 169

    IN        [reduce using rule 81 (EqualityExpr)]
    $default  reduce using rule 81 (EqualityExpr)


state 255

   73 RelationalExpr: RelationalExpr . '<' ShiftExpr
   74               | RelationalExpr . '>' ShiftExpr
   75               | RelationalExpr . LE ShiftExpr
   76               | RelationalExpr . GE ShiftExpr
   77               | RelationalExpr . INSTANCEOF ShiftExpr
   78               | RelationalExpr . IN ShiftExpr
   82 EqualityExpr: EqualityExpr STREQ RelationalExpr .  [error, IN, EQEQ, NE, STREQ, STRNEQ, OR, AND, ')', '}', ']', ',', ':', '&', '^', '|', '?', ';']

    IN          shift, and go to state 164
    INSTANCEOF  shift, and go to state 165
    LE          shift, and go to state 166
    GE          shift, and go to state 167
    '<'         shift, and go to state 168
    '>'         shift, and go to state 169

    IN        [reduce using rule 82 (EqualityExpr)]
    $default  reduce using rule 82 (EqualityExpr)


state 256

   73 RelationalExpr: RelationalExpr . '<' ShiftExpr
   74               | RelationalExpr . '>' ShiftExpr
   75               | RelationalExpr . LE ShiftExpr
   76               | RelationalExpr . GE ShiftExpr
   77               | RelationalExpr . INSTANCEOF ShiftExpr
   78               | RelationalExpr . IN ShiftExpr
   83 EqualityExpr: EqualityExpr STRNEQ RelationalExpr .  [error, IN, EQEQ, NE, STREQ, STRNEQ, OR, AND, ')', '}', ']', ',', ':', '&', '^', '|', '?', ';']

    IN          shift, and go to state 164
    INSTANCEOF  shift, and go to state 165
    LE          shift, and go to state 166
    GE          shift, and go to state 167
    '<'         shift, and go to state 168
    '>'         shift, and go to state 169

    IN        [reduce using rule 83 (EqualityExpr)]
    $default  reduce using rule 83 (EqualityExpr)


state 257

   80 EqualityExpr: EqualityExpr . EQEQ RelationalExpr
   81             | EqualityExpr . NE RelationalExpr
   82             | EqualityExpr . STREQ RelationalExpr
   83             | EqualityExpr . STRNEQ RelationalExpr
   85 BitwiseANDExpr: BitwiseANDExpr '&' EqualityExpr .  [error, IN, OR, AND, ')', '}', ']', ',', ':', '&', '^', '|', '?', ';']

    EQEQ    shift, and go to state 170
    NE      shift, and go to state 171
    STREQ   shift, and go to state 172
    STRNEQ  shift, and go to state 173

    $default  reduce using rule 85 (BitwiseANDExpr)


state 258

   85 BitwiseANDExpr: BitwiseANDExpr . '&' EqualityExpr
   87 BitwiseXORExpr: BitwiseXORExpr '^' BitwiseANDExpr .  [error, IN, OR, AND, ')', '}', ']', ',', ':', '^', '|', '?', ';']

    '&'  shift, and go to state 174

    $default  reduce using rule 87 (BitwiseXORExpr)


state 259

   87 BitwiseXORExpr: BitwiseXORExpr . '^' BitwiseANDExpr
   89 BitwiseORExpr: BitwiseORExpr '|' BitwiseXORExpr .  [error, IN, OR, AND, ')', '}', ']', ',', ':', '|', '?', ';']

    '^'  shift, and go to state 175

    $default  reduce using rule 89 (BitwiseORExpr)


state 260

   89 BitwiseORExpr: BitwiseORExpr . '|' BitwiseXORExpr
   91 LogicalANDExpr: LogicalANDExpr AND BitwiseORExpr .  [error, IN, OR, AND, ')', '}', ']', ',', ':', '?', ';']

    '|'  shift, and go to state 176

    $default  reduce using rule 91 (LogicalANDExpr)


state 261

   91 LogicalANDExpr: LogicalANDExpr . AND BitwiseORExpr
   93 LogicalORExpr: LogicalORExpr OR LogicalANDExpr .  [error, IN, OR, ')', '}', ']', ',', ':', '?', ';']

    AND  shift, and go to state 177

    $default  reduce using rule 93 (LogicalORExpr)


state 262

   95 ConditionalExpr: LogicalORExpr '?' AssignmentExpr . ':' AssignmentExpr

    ':'  shift, and go to state 291


state 263

  111 Expr: Expr ',' AssignmentExpr .

    $default  reduce using rule 111 (Expr)


state 264

  134 VariableDeclaration: IDENT .  [',', ';']
  135                    | IDENT . Initializer
  136 Initializer: . '=' AssignmentExpr
  147 IterationStatement: FOR '(' VAR IDENT . IN Expr ')' Statement
  148                   | FOR '(' VAR IDENT . Initializer IN Expr ')' Statement

    IN   shift, and go to state 292
    '='  shift, and go to state 196

    $default  reduce using rule 134 (VariableDeclaration)

    Initializer  go to state 293


state 265

  133 VariableDeclarationList: VariableDeclarationList . ',' VariableDeclaration
  145 IterationStatement: FOR '(' VAR VariableDeclarationList . ';' ExprOpt ';' ExprOpt ')' Statement

    ','  shift, and go to state 199
    ';'  shift, and go to state 294


state 266

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  146 IterationStatement: FOR '(' LeftHandSideExpr IN . Expr ')' Statement
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 295
    FunctionExpr        go to state 77


state 267

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  144 IterationStatement: FOR '(' ExprOpt ';' . ExprOpt ';' ExprOpt ')' Statement
  149 ExprOpt: .  [';']
  150        | . Expr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    $default  reduce using rule 149 (ExprOpt)

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 189
    ExprOpt             go to state 296
    FunctionExpr        go to state 77


state 268

  136 Initializer: '=' AssignmentExpr .

    $default  reduce using rule 136 (Initializer)


state 269

  133 VariableDeclarationList: VariableDeclarationList ',' VariableDeclaration .

    $default  reduce using rule 133 (VariableDeclarationList)


state 270

  182 FunctionDeclaration: FUNCTION IDENT '(' ')' . FunctionBody
  188 FunctionBody: . '{' '}'
  189             | . '{' SourceElements '}'

    '{'  shift, and go to state 272

    FunctionBody  go to state 297


state 271

  183 FunctionDeclaration: FUNCTION IDENT '(' FormalParameterList . ')' FunctionBody
  187 FormalParameterList: FormalParameterList . ',' IDENT

    ')'  shift, and go to state 298
    ','  shift, and go to state 275


state 272

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  182 FunctionDeclaration: . FUNCTION IDENT '(' ')' FunctionBody
  183                    | . FUNCTION IDENT '(' FormalParameterList ')' FunctionBody
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody
  188 FunctionBody: '{' . '}'
  189             | '{' . SourceElements '}'
  192 SourceElements: . SourceElement
  193               | . SourceElements SourceElement
  194 SourceElement: . Statement
  195              | . FunctionDeclaration

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 9
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '}'             shift, and go to state 299
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal              go to state 39
    PrimaryExpr          go to state 40
    ArrayLiteral         go to state 41
    MemberExpr           go to state 42
    NewExpr              go to state 43
    CallExpr             go to state 44
    LeftHandSideExpr     go to state 45
    PostfixExpr          go to state 46
    UnaryExpr            go to state 47
    MultiplicativeExpr   go to state 48
    AdditiveExpr         go to state 49
    ShiftExpr            go to state 50
    RelationalExpr       go to state 51
    EqualityExpr         go to state 52
    BitwiseANDExpr       go to state 53
    BitwiseXORExpr       go to state 54
    BitwiseORExpr        go to state 55
    LogicalANDExpr       go to state 56
    LogicalORExpr        go to state 57
    ConditionalExpr      go to state 58
    AssignmentExpr       go to state 59
    Expr                 go to state 60
    Statement            go to state 61
    Block                go to state 62
    VariableStatement    go to state 63
    EmptyStatement       go to state 64
    ExprStatement        go to state 65
    IfStatement          go to state 66
    IterationStatement   go to state 67
    ContinueStatement    go to state 68
    BreakStatement       go to state 69
    ReturnStatement      go to state 70
    WithStatement        go to state 71
    SwitchStatement      go to state 72
    LabelledStatement    go to state 73
    ThrowStatement       go to state 74
    TryStatement         go to state 75
    FunctionDeclaration  go to state 76
    FunctionExpr         go to state 77
    SourceElements       go to state 300
    SourceElement        go to state 80


state 273

  184 FunctionExpr: FUNCTION '(' ')' FunctionBody .

    $default  reduce using rule 184 (FunctionExpr)


state 274

  185 FunctionExpr: FUNCTION '(' FormalParameterList ')' . FunctionBody
  188 FunctionBody: . '{' '}'
  189             | . '{' SourceElements '}'

    '{'  shift, and go to state 272

    FunctionBody  go to state 301


state 275

  187 FormalParameterList: FormalParameterList ',' . IDENT

    IDENT  shift, and go to state 302


state 276

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  140            | IF '(' Expr ')' . Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  141            | IF '(' Expr ')' . Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 303
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 277

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  142 IterationStatement: DO Statement WHILE '(' . Expr ')'
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 304
    FunctionExpr        go to state 77


state 278

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  143                   | WHILE '(' Expr ')' . Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 305
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 279

  164 SwitchStatement: SWITCH '(' Expr ')' . CaseBlock
  165 CaseBlock: . '{' CaseClausesOpt '}'
  166          | . '{' CaseClausesOpt DefaultClause CaseClausesOpt '}'

    '{'  shift, and go to state 306

    CaseBlock  go to state 307


state 280

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  163              | WITH '(' Expr ')' . Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 308
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 281

  180 Catch: CATCH '(' . IDENT ')' Block

    IDENT  shift, and go to state 309


state 282

  181 Finally: FINALLY Block .

    $default  reduce using rule 181 (Finally)


state 283

  179 TryStatement: TRY Block Catch Finally .

    $default  reduce using rule 179 (TryStatement)


state 284

   25 PropertyNameAndValueList: PropertyNameAndValueList ',' PropertyName . ':' AssignmentExpr

    ':'  shift, and go to state 310


state 285

   24 PropertyNameAndValueList: PropertyName ':' AssignmentExpr .

    $default  reduce using rule 24 (PropertyNameAndValueList)


state 286

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   17             | '[' ElementList ',' ElisionOpt . ']'
   19 ElementList: ElementList ',' ElisionOpt . AssignmentExpr
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    ']'             shift, and go to state 311
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 312
    FunctionExpr        go to state 77


state 287

   41 Arguments: '(' ArgumentList ')' .

    $default  reduce using rule 41 (Arguments)


state 288

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   43 ArgumentList: ArgumentList ',' . AssignmentExpr
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 313
    FunctionExpr        go to state 77


state 289

   31 MemberExpr: MemberExpr '[' Expr ']' .

    $default  reduce using rule 31 (MemberExpr)


state 290

   38 CallExpr: CallExpr '[' Expr ']' .

    $default  reduce using rule 38 (CallExpr)


state 291

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   95                | LogicalORExpr '?' AssignmentExpr ':' . AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 314
    FunctionExpr        go to state 77


state 292

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  147 IterationStatement: FOR '(' VAR IDENT IN . Expr ')' Statement
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 315
    FunctionExpr        go to state 77


state 293

  135 VariableDeclaration: IDENT Initializer .  [',', ';']
  148 IterationStatement: FOR '(' VAR IDENT Initializer . IN Expr ')' Statement

    IN  shift, and go to state 316

    $default  reduce using rule 135 (VariableDeclaration)


state 294

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  145 IterationStatement: FOR '(' VAR VariableDeclarationList ';' . ExprOpt ';' ExprOpt ')' Statement
  149 ExprOpt: .  [';']
  150        | . Expr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    $default  reduce using rule 149 (ExprOpt)

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 189
    ExprOpt             go to state 317
    FunctionExpr        go to state 77


state 295

  111 Expr: Expr . ',' AssignmentExpr
  146 IterationStatement: FOR '(' LeftHandSideExpr IN Expr . ')' Statement

    ')'  shift, and go to state 318
    ','  shift, and go to state 181


state 296

  144 IterationStatement: FOR '(' ExprOpt ';' ExprOpt . ';' ExprOpt ')' Statement

    ';'  shift, and go to state 319


state 297

  182 FunctionDeclaration: FUNCTION IDENT '(' ')' FunctionBody .

    $default  reduce using rule 182 (FunctionDeclaration)


state 298

  183 FunctionDeclaration: FUNCTION IDENT '(' FormalParameterList ')' . FunctionBody
  188 FunctionBody: . '{' '}'
  189             | . '{' SourceElements '}'

    '{'  shift, and go to state 272

    FunctionBody  go to state 320


state 299

  188 FunctionBody: '{' '}' .

    $default  reduce using rule 188 (FunctionBody)


state 300

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  182 FunctionDeclaration: . FUNCTION IDENT '(' ')' FunctionBody
  183                    | . FUNCTION IDENT '(' FormalParameterList ')' FunctionBody
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody
  189 FunctionBody: '{' SourceElements . '}'
  193 SourceElements: SourceElements . SourceElement
  194 SourceElement: . Statement
  195              | . FunctionDeclaration

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 9
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '}'             shift, and go to state 321
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal              go to state 39
    PrimaryExpr          go to state 40
    ArrayLiteral         go to state 41
    MemberExpr           go to state 42
    NewExpr              go to state 43
    CallExpr             go to state 44
    LeftHandSideExpr     go to state 45
    PostfixExpr          go to state 46
    UnaryExpr            go to state 47
    MultiplicativeExpr   go to state 48
    AdditiveExpr         go to state 49
    ShiftExpr            go to state 50
    RelationalExpr       go to state 51
    EqualityExpr         go to state 52
    BitwiseANDExpr       go to state 53
    BitwiseXORExpr       go to state 54
    BitwiseORExpr        go to state 55
    LogicalANDExpr       go to state 56
    LogicalORExpr        go to state 57
    ConditionalExpr      go to state 58
    AssignmentExpr       go to state 59
    Expr                 go to state 60
    Statement            go to state 61
    Block                go to state 62
    VariableStatement    go to state 63
    EmptyStatement       go to state 64
    ExprStatement        go to state 65
    IfStatement          go to state 66
    IterationStatement   go to state 67
    ContinueStatement    go to state 68
    BreakStatement       go to state 69
    ReturnStatement      go to state 70
    WithStatement        go to state 71
    SwitchStatement      go to state 72
    LabelledStatement    go to state 73
    ThrowStatement       go to state 74
    TryStatement         go to state 75
    FunctionDeclaration  go to state 76
    FunctionExpr         go to state 77
    SourceElement        go to state 184


state 301

  185 FunctionExpr: FUNCTION '(' FormalParameterList ')' FunctionBody .

    $default  reduce using rule 185 (FunctionExpr)


state 302

  187 FormalParameterList: FormalParameterList ',' IDENT .

    $default  reduce using rule 187 (FormalParameterList)


state 303

  140 IfStatement: IF '(' Expr ')' Statement .  [$end, NULLTOKEN, TRUETOKEN, FALSETOKEN, BREAK, CASE, DEFAULT, FOR, NEW, VAR, CONTINUE, FUNCTION, RETURN, VOID, DELETE, IF, THIS, DO, WHILE, ELSE, TYPEOF, SWITCH, WITH, THROW, TRY, PLUSPLUS, MINUSMINUS, DIVEQUAL, NUMBER, STRING, IDENT, AUTOPLUSPLUS, AUTOMINUSMINUS, '/', '(', '{', '}', '[', '+', '-', '~', '!', ';']
  141            | IF '(' Expr ')' Statement . ELSE Statement

    ELSE  shift, and go to state 322

    ELSE      [reduce using rule 140 (IfStatement)]
    $default  reduce using rule 140 (IfStatement)


state 304

  111 Expr: Expr . ',' AssignmentExpr
  142 IterationStatement: DO Statement WHILE '(' Expr . ')'

    ')'  shift, and go to state 323
    ','  shift, and go to state 181


state 305

  143 IterationStatement: WHILE '(' Expr ')' Statement .

    $default  reduce using rule 143 (IterationStatement)


state 306

  165 CaseBlock: '{' . CaseClausesOpt '}'
  166          | '{' . CaseClausesOpt DefaultClause CaseClausesOpt '}'
  167 CaseClausesOpt: .  [DEFAULT, '}']
  168               | . CaseClauses
  169 CaseClauses: . CaseClause
  170            | . CaseClauses CaseClause
  171 CaseClause: . CASE Expr ':'
  172           | . CASE Expr ':' StatementList

    CASE  shift, and go to state 324

    $default  reduce using rule 167 (CaseClausesOpt)

    CaseClausesOpt  go to state 325
    CaseClauses     go to state 326
    CaseClause      go to state 327


state 307

  164 SwitchStatement: SWITCH '(' Expr ')' CaseBlock .

    $default  reduce using rule 164 (SwitchStatement)


state 308

  163 WithStatement: WITH '(' Expr ')' Statement .

    $default  reduce using rule 163 (WithStatement)


state 309

  180 Catch: CATCH '(' IDENT . ')' Block

    ')'  shift, and go to state 328


state 310

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   25 PropertyNameAndValueList: PropertyNameAndValueList ',' PropertyName ':' . AssignmentExpr
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 329
    FunctionExpr        go to state 77


state 311

   17 ArrayLiteral: '[' ElementList ',' ElisionOpt ']' .

    $default  reduce using rule 17 (ArrayLiteral)


state 312

   19 ElementList: ElementList ',' ElisionOpt AssignmentExpr .

    $default  reduce using rule 19 (ElementList)


state 313

   43 ArgumentList: ArgumentList ',' AssignmentExpr .

    $default  reduce using rule 43 (ArgumentList)


state 314

   95 ConditionalExpr: LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr .

    $default  reduce using rule 95 (ConditionalExpr)


state 315

  111 Expr: Expr . ',' AssignmentExpr
  147 IterationStatement: FOR '(' VAR IDENT IN Expr . ')' Statement

    ')'  shift, and go to state 330
    ','  shift, and go to state 181


state 316

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  148 IterationStatement: FOR '(' VAR IDENT Initializer IN . Expr ')' Statement
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 331
    FunctionExpr        go to state 77


state 317

  145 IterationStatement: FOR '(' VAR VariableDeclarationList ';' ExprOpt . ';' ExprOpt ')' Statement

    ';'  shift, and go to state 332


state 318

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  146                   | FOR '(' LeftHandSideExpr IN Expr ')' . Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 333
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 319

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  144 IterationStatement: FOR '(' ExprOpt ';' ExprOpt ';' . ExprOpt ')' Statement
  149 ExprOpt: .  [')']
  150        | . Expr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    $default  reduce using rule 149 (ExprOpt)

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 189
    ExprOpt             go to state 334
    FunctionExpr        go to state 77


state 320

  183 FunctionDeclaration: FUNCTION IDENT '(' FormalParameterList ')' FunctionBody .

    $default  reduce using rule 183 (FunctionDeclaration)


state 321

  189 FunctionBody: '{' SourceElements '}' .

    $default  reduce using rule 189 (FunctionBody)


state 322

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  141            | IF '(' Expr ')' Statement ELSE . Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 335
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 323

  142 IterationStatement: DO Statement WHILE '(' Expr ')' .

    $default  reduce using rule 142 (IterationStatement)


state 324

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  171 CaseClause: CASE . Expr ':'
  172           | CASE . Expr ':' StatementList
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 336
    FunctionExpr        go to state 77


state 325

  165 CaseBlock: '{' CaseClausesOpt . '}'
  166          | '{' CaseClausesOpt . DefaultClause CaseClausesOpt '}'
  173 DefaultClause: . DEFAULT ':'
  174              | . DEFAULT ':' StatementList

    DEFAULT  shift, and go to state 337
    '}'      shift, and go to state 338

    DefaultClause  go to state 339


state 326

  168 CaseClausesOpt: CaseClauses .  [DEFAULT, '}']
  170 CaseClauses: CaseClauses . CaseClause
  171 CaseClause: . CASE Expr ':'
  172           | . CASE Expr ':' StatementList

    CASE  shift, and go to state 324

    $default  reduce using rule 168 (CaseClausesOpt)

    CaseClause  go to state 340


state 327

  169 CaseClauses: CaseClause .

    $default  reduce using rule 169 (CaseClauses)


state 328

  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  180 Catch: CATCH '(' IDENT ')' . Block

    '{'  shift, and go to state 111

    Block  go to state 341


state 329

   25 PropertyNameAndValueList: PropertyNameAndValueList ',' PropertyName ':' AssignmentExpr .

    $default  reduce using rule 25 (PropertyNameAndValueList)


state 330

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  147                   | FOR '(' VAR IDENT IN Expr ')' . Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 342
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 331

  111 Expr: Expr . ',' AssignmentExpr
  148 IterationStatement: FOR '(' VAR IDENT Initializer IN Expr . ')' Statement

    ')'  shift, and go to state 343
    ','  shift, and go to state 181


state 332

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  145 IterationStatement: FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' . ExprOpt ')' Statement
  149 ExprOpt: .  [')']
  150        | . Expr
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    NEW             shift, and go to state 6
    FUNCTION        shift, and go to state 85
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    THIS            shift, and go to state 14
    TYPEOF          shift, and go to state 17
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 86
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 87
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37

    $default  reduce using rule 149 (ExprOpt)

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 189
    ExprOpt             go to state 344
    FunctionExpr        go to state 77


state 333

  146 IterationStatement: FOR '(' LeftHandSideExpr IN Expr ')' Statement .

    $default  reduce using rule 146 (IterationStatement)


state 334

  144 IterationStatement: FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt . ')' Statement

    ')'  shift, and go to state 345


state 335

  141 IfStatement: IF '(' Expr ')' Statement ELSE Statement .

    $default  reduce using rule 141 (IfStatement)


state 336

  111 Expr: Expr . ',' AssignmentExpr
  171 CaseClause: CASE Expr . ':'
  172           | CASE Expr . ':' StatementList

    ','  shift, and go to state 181
    ':'  shift, and go to state 346


state 337

  173 DefaultClause: DEFAULT . ':'
  174              | DEFAULT . ':' StatementList

    ':'  shift, and go to state 347


state 338

  165 CaseBlock: '{' CaseClausesOpt '}' .

    $default  reduce using rule 165 (CaseBlock)


state 339

  166 CaseBlock: '{' CaseClausesOpt DefaultClause . CaseClausesOpt '}'
  167 CaseClausesOpt: .  ['}']
  168               | . CaseClauses
  169 CaseClauses: . CaseClause
  170            | . CaseClauses CaseClause
  171 CaseClause: . CASE Expr ':'
  172           | . CASE Expr ':' StatementList

    CASE  shift, and go to state 324

    $default  reduce using rule 167 (CaseClausesOpt)

    CaseClausesOpt  go to state 348
    CaseClauses     go to state 326
    CaseClause      go to state 327


state 340

  170 CaseClauses: CaseClauses CaseClause .

    $default  reduce using rule 170 (CaseClauses)


state 341

  180 Catch: CATCH '(' IDENT ')' Block .

    $default  reduce using rule 180 (Catch)


state 342

  147 IterationStatement: FOR '(' VAR IDENT IN Expr ')' Statement .

    $default  reduce using rule 147 (IterationStatement)


state 343

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  148                   | FOR '(' VAR IDENT Initializer IN Expr ')' . Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 349
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 344

  145 IterationStatement: FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt . ')' Statement

    ')'  shift, and go to state 350


state 345

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  144                   | FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' . Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 351
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 346

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  128 StatementList: . Statement
  129              | . StatementList Statement
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  171 CaseClause: CASE Expr ':' .  [CASE, DEFAULT, '}']
  172           | CASE Expr ':' . StatementList
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    $default  reduce using rule 171 (CaseClause)

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 352
    Block               go to state 62
    StatementList       go to state 353
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 347

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  128 StatementList: . Statement
  129              | . StatementList Statement
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  173 DefaultClause: DEFAULT ':' .  [CASE, '}']
  174              | DEFAULT ':' . StatementList
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    $default  reduce using rule 173 (DefaultClause)

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 352
    Block               go to state 62
    StatementList       go to state 354
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 348

  166 CaseBlock: '{' CaseClausesOpt DefaultClause CaseClausesOpt . '}'

    '}'  shift, and go to state 355


state 349

  148 IterationStatement: FOR '(' VAR IDENT Initializer IN Expr ')' Statement .

    $default  reduce using rule 148 (IterationStatement)


state 350

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' . Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 356
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 351

  144 IterationStatement: FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement .

    $default  reduce using rule 144 (IterationStatement)


state 352

  128 StatementList: Statement .

    $default  reduce using rule 128 (StatementList)


state 353

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  129 StatementList: StatementList . Statement
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  172 CaseClause: CASE Expr ':' StatementList .  [CASE, DEFAULT, '}']
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    $default  reduce using rule 172 (CaseClause)

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 357
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 354

    1 Literal: . NULLTOKEN
    2        | . TRUETOKEN
    3        | . FALSETOKEN
    4        | . NUMBER
    5        | . STRING
    6        | . '/'
    7        | . DIVEQUAL
    8 PrimaryExpr: . THIS
    9            | . IDENT
   10            | . Literal
   11            | . ArrayLiteral
   12            | . '(' Expr ')'
   13            | . '{' '}'
   14            | . '{' PropertyNameAndValueList '}'
   15 ArrayLiteral: . '[' ElisionOpt ']'
   16             | . '[' ElementList ']'
   17             | . '[' ElementList ',' ElisionOpt ']'
   29 MemberExpr: . PrimaryExpr
   30           | . FunctionExpr
   31           | . MemberExpr '[' Expr ']'
   32           | . MemberExpr '.' IDENT
   33           | . NEW MemberExpr Arguments
   34 NewExpr: . MemberExpr
   35        | . NEW NewExpr
   36 CallExpr: . MemberExpr Arguments
   37         | . CallExpr Arguments
   38         | . CallExpr '[' Expr ']'
   39         | . CallExpr '.' IDENT
   44 LeftHandSideExpr: . NewExpr
   45                 | . CallExpr
   46 PostfixExpr: . LeftHandSideExpr
   47            | . LeftHandSideExpr PLUSPLUS
   48            | . LeftHandSideExpr MINUSMINUS
   49 UnaryExpr: . PostfixExpr
   50          | . DELETE UnaryExpr
   51          | . VOID UnaryExpr
   52          | . TYPEOF UnaryExpr
   53          | . PLUSPLUS UnaryExpr
   54          | . AUTOPLUSPLUS UnaryExpr
   55          | . MINUSMINUS UnaryExpr
   56          | . AUTOMINUSMINUS UnaryExpr
   57          | . '+' UnaryExpr
   58          | . '-' UnaryExpr
   59          | . '~' UnaryExpr
   60          | . '!' UnaryExpr
   61 MultiplicativeExpr: . UnaryExpr
   62                   | . MultiplicativeExpr '*' UnaryExpr
   63                   | . MultiplicativeExpr '/' UnaryExpr
   64                   | . MultiplicativeExpr '%' UnaryExpr
   65 AdditiveExpr: . MultiplicativeExpr
   66             | . AdditiveExpr '+' MultiplicativeExpr
   67             | . AdditiveExpr '-' MultiplicativeExpr
   68 ShiftExpr: . AdditiveExpr
   69          | . ShiftExpr LSHIFT AdditiveExpr
   70          | . ShiftExpr RSHIFT AdditiveExpr
   71          | . ShiftExpr URSHIFT AdditiveExpr
   72 RelationalExpr: . ShiftExpr
   73               | . RelationalExpr '<' ShiftExpr
   74               | . RelationalExpr '>' ShiftExpr
   75               | . RelationalExpr LE ShiftExpr
   76               | . RelationalExpr GE ShiftExpr
   77               | . RelationalExpr INSTANCEOF ShiftExpr
   78               | . RelationalExpr IN ShiftExpr
   79 EqualityExpr: . RelationalExpr
   80             | . EqualityExpr EQEQ RelationalExpr
   81             | . EqualityExpr NE RelationalExpr
   82             | . EqualityExpr STREQ RelationalExpr
   83             | . EqualityExpr STRNEQ RelationalExpr
   84 BitwiseANDExpr: . EqualityExpr
   85               | . BitwiseANDExpr '&' EqualityExpr
   86 BitwiseXORExpr: . BitwiseANDExpr
   87               | . BitwiseXORExpr '^' BitwiseANDExpr
   88 BitwiseORExpr: . BitwiseXORExpr
   89              | . BitwiseORExpr '|' BitwiseXORExpr
   90 LogicalANDExpr: . BitwiseORExpr
   91               | . LogicalANDExpr AND BitwiseORExpr
   92 LogicalORExpr: . LogicalANDExpr
   93              | . LogicalORExpr OR LogicalANDExpr
   94 ConditionalExpr: . LogicalORExpr
   95                | . LogicalORExpr '?' AssignmentExpr ':' AssignmentExpr
   96 AssignmentExpr: . ConditionalExpr
   97               | . LeftHandSideExpr AssignmentOperator AssignmentExpr
  110 Expr: . AssignmentExpr
  111     | . Expr ',' AssignmentExpr
  112 Statement: . Block
  113          | . VariableStatement
  114          | . EmptyStatement
  115          | . ExprStatement
  116          | . IfStatement
  117          | . IterationStatement
  118          | . ContinueStatement
  119          | . BreakStatement
  120          | . ReturnStatement
  121          | . WithStatement
  122          | . SwitchStatement
  123          | . LabelledStatement
  124          | . ThrowStatement
  125          | . TryStatement
  126 Block: . '{' '}'
  127      | . '{' SourceElements '}'
  129 StatementList: StatementList . Statement
  130 VariableStatement: . VAR VariableDeclarationList ';'
  131                  | . VAR VariableDeclarationList error
  137 EmptyStatement: . ';'
  138 ExprStatement: . Expr ';'
  139              | . Expr error
  140 IfStatement: . IF '(' Expr ')' Statement
  141            | . IF '(' Expr ')' Statement ELSE Statement
  142 IterationStatement: . DO Statement WHILE '(' Expr ')'
  143                   | . WHILE '(' Expr ')' Statement
  144                   | . FOR '(' ExprOpt ';' ExprOpt ';' ExprOpt ')' Statement
  145                   | . FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement
  146                   | . FOR '(' LeftHandSideExpr IN Expr ')' Statement
  147                   | . FOR '(' VAR IDENT IN Expr ')' Statement
  148                   | . FOR '(' VAR IDENT Initializer IN Expr ')' Statement
  151 ContinueStatement: . CONTINUE ';'
  152                  | . CONTINUE error
  153                  | . CONTINUE IDENT ';'
  154                  | . CONTINUE IDENT error
  155 BreakStatement: . BREAK ';'
  156               | . BREAK error
  157               | . BREAK IDENT ';'
  158               | . BREAK IDENT error
  159 ReturnStatement: . RETURN ';'
  160                | . RETURN error
  161                | . RETURN Expr ';'
  162                | . RETURN Expr error
  163 WithStatement: . WITH '(' Expr ')' Statement
  164 SwitchStatement: . SWITCH '(' Expr ')' CaseBlock
  174 DefaultClause: DEFAULT ':' StatementList .  [CASE, '}']
  175 LabelledStatement: . IDENT ':' Statement
  176 ThrowStatement: . THROW Expr ';'
  177 TryStatement: . TRY Block Catch
  178             | . TRY Block Finally
  179             | . TRY Block Catch Finally
  184 FunctionExpr: . FUNCTION '(' ')' FunctionBody
  185             | . FUNCTION '(' FormalParameterList ')' FunctionBody

    NULLTOKEN       shift, and go to state 1
    TRUETOKEN       shift, and go to state 2
    FALSETOKEN      shift, and go to state 3
    BREAK           shift, and go to state 4
    FOR             shift, and go to state 5
    NEW             shift, and go to state 6
    VAR             shift, and go to state 7
    CONTINUE        shift, and go to state 8
    FUNCTION        shift, and go to state 85
    RETURN          shift, and go to state 10
    VOID            shift, and go to state 11
    DELETE          shift, and go to state 12
    IF              shift, and go to state 13
    THIS            shift, and go to state 14
    DO              shift, and go to state 15
    WHILE           shift, and go to state 16
    TYPEOF          shift, and go to state 17
    SWITCH          shift, and go to state 18
    WITH            shift, and go to state 19
    THROW           shift, and go to state 20
    TRY             shift, and go to state 21
    PLUSPLUS        shift, and go to state 22
    MINUSMINUS      shift, and go to state 23
    DIVEQUAL        shift, and go to state 24
    NUMBER          shift, and go to state 25
    STRING          shift, and go to state 26
    IDENT           shift, and go to state 27
    AUTOPLUSPLUS    shift, and go to state 28
    AUTOMINUSMINUS  shift, and go to state 29
    '/'             shift, and go to state 30
    '('             shift, and go to state 31
    '{'             shift, and go to state 32
    '['             shift, and go to state 33
    '+'             shift, and go to state 34
    '-'             shift, and go to state 35
    '~'             shift, and go to state 36
    '!'             shift, and go to state 37
    ';'             shift, and go to state 38

    $default  reduce using rule 174 (DefaultClause)

    Literal             go to state 39
    PrimaryExpr         go to state 40
    ArrayLiteral        go to state 41
    MemberExpr          go to state 42
    NewExpr             go to state 43
    CallExpr            go to state 44
    LeftHandSideExpr    go to state 45
    PostfixExpr         go to state 46
    UnaryExpr           go to state 47
    MultiplicativeExpr  go to state 48
    AdditiveExpr        go to state 49
    ShiftExpr           go to state 50
    RelationalExpr      go to state 51
    EqualityExpr        go to state 52
    BitwiseANDExpr      go to state 53
    BitwiseXORExpr      go to state 54
    BitwiseORExpr       go to state 55
    LogicalANDExpr      go to state 56
    LogicalORExpr       go to state 57
    ConditionalExpr     go to state 58
    AssignmentExpr      go to state 59
    Expr                go to state 60
    Statement           go to state 357
    Block               go to state 62
    VariableStatement   go to state 63
    EmptyStatement      go to state 64
    ExprStatement       go to state 65
    IfStatement         go to state 66
    IterationStatement  go to state 67
    ContinueStatement   go to state 68
    BreakStatement      go to state 69
    ReturnStatement     go to state 70
    WithStatement       go to state 71
    SwitchStatement     go to state 72
    LabelledStatement   go to state 73
    ThrowStatement      go to state 74
    TryStatement        go to state 75
    FunctionExpr        go to state 77


state 355

  166 CaseBlock: '{' CaseClausesOpt DefaultClause CaseClausesOpt '}' .

    $default  reduce using rule 166 (CaseBlock)


state 356

  145 IterationStatement: FOR '(' VAR VariableDeclarationList ';' ExprOpt ';' ExprOpt ')' Statement .

    $default  reduce using rule 145 (IterationStatement)


state 357

  129 StatementList: StatementList Statement .

    $default  reduce using rule 129 (StatementList)
